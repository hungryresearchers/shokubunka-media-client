@charset "UTF-8";
/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
body {
  margin: 0;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/* line 54, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

/* line 67, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
[hidden],
template {
  display: none;
}

/* line 89, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
a {
  background-color: transparent;
}

/* line 98, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
a:active,
a:hover {
  outline: 0;
}

/* line 110, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/* line 118, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
b,
strong {
  font-weight: bold;
}

/* line 127, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
dfn {
  font-style: italic;
}

/* line 136, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* line 145, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
mark {
  background: #ff0;
  color: #000;
}

/* line 154, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
small {
  font-size: 80%;
}

/* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 170, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
sup {
  top: -0.5em;
}

/* line 174, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
sub {
  bottom: -0.25em;
}

/* line 185, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
img {
  border: 0;
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
svg:not(:root) {
  overflow: hidden;
}

/* line 204, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
figure {
  margin: 1em 40px;
}

/* line 212, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
hr {
  box-sizing: content-box;
  height: 0;
}

/* line 221, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
pre {
  overflow: auto;
}

/* line 229, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* line 252, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

/* line 266, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button {
  overflow: visible;
}

/* line 277, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button,
select {
  text-transform: none;
}

/* line 290, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

/* line 302, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default;
}

/* line 311, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* line 322, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
input {
  line-height: normal;
}

/* line 334, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

/* line 346, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/* line 356, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

/* line 367, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/* line 376, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/* line 387, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
legend {
  border: 0;
  padding: 0;
}

/* line 396, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
textarea {
  overflow: auto;
}

/* line 405, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
optgroup {
  font-weight: bold;
}

/* line 416, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 421, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_normalize.scss */
td,
th {
  padding: 0;
}

/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */
@media print {
  /* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  a,
  a:visited {
    text-decoration: underline;
  }
  /* line 23, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  a[href]:after {
    content: " (" attr(href) ")";
  }
  /* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  /* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
  /* line 38, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  /* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  thead {
    display: table-header-group;
  }
  /* line 48, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  tr,
  img {
    page-break-inside: avoid;
  }
  /* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  img {
    max-width: 100% !important;
  }
  /* line 57, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  /* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  h2,
  h3 {
    page-break-after: avoid;
  }
  /* line 72, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .navbar {
    display: none;
  }
  /* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .btn > .caret,
  .dropup > .btn > .caret {
    border-top-color: #000 !important;
  }
  /* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .label {
    border: 1px solid #000;
  }
  /* line 85, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .table {
    border-collapse: collapse !important;
  }
  /* line 88, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .table td,
  .table th {
    background-color: #fff !important;
  }
  /* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_print.scss */
  .table-bordered th,
  .table-bordered td {
    border: 1px solid #ddd !important;
  }
}

@font-face {
  font-family: 'Glyphicons Halflings';
  src: url("/assets/bootstrap/glyphicons-halflings-regular-13634da87d9e23f8c3ed9108ce1724d183a39ad072e73e1b3d8cbf646d2d0407.eot");
  src: url("/assets/bootstrap/glyphicons-halflings-regular-13634da87d9e23f8c3ed9108ce1724d183a39ad072e73e1b3d8cbf646d2d0407.eot?#iefix") format("embedded-opentype"), url("/assets/bootstrap/glyphicons-halflings-regular-fe185d11a49676890d47bb783312a0cda5a44c4039214094e7957b4c040ef11c.woff2") format("woff2"), url("/assets/bootstrap/glyphicons-halflings-regular-a26394f7ede100ca118eff2eda08596275a9839b959c226e15439557a5a80742.woff") format("woff"), url("/assets/bootstrap/glyphicons-halflings-regular-e395044093757d82afcb138957d06a1ea9361bdcf0b442d06a18a8051af57456.ttf") format("truetype"), url("/assets/bootstrap/glyphicons-halflings-regular-42f60659d265c1a3c30f9fa42abcbb56bd4a53af4d83d316d6dd7a36903c43e5.svg#glyphicons_halflingsregular") format("svg");
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon {
  position: relative;
  top: 1px;
  display: inline-block;
  font-family: 'Glyphicons Halflings';
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-asterisk:before {
  content: "\002a";
}

/* line 38, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-plus:before {
  content: "\002b";
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-euro:before,
.glyphicon-eur:before {
  content: "\20ac";
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-minus:before {
  content: "\2212";
}

/* line 42, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cloud:before {
  content: "\2601";
}

/* line 43, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-envelope:before {
  content: "\2709";
}

/* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-pencil:before {
  content: "\270f";
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-glass:before {
  content: "\e001";
}

/* line 46, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-music:before {
  content: "\e002";
}

/* line 47, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-search:before {
  content: "\e003";
}

/* line 48, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-heart:before {
  content: "\e005";
}

/* line 49, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-star:before {
  content: "\e006";
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-star-empty:before {
  content: "\e007";
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-user:before {
  content: "\e008";
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-film:before {
  content: "\e009";
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-th-large:before {
  content: "\e010";
}

/* line 54, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-th:before {
  content: "\e011";
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-th-list:before {
  content: "\e012";
}

/* line 56, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ok:before {
  content: "\e013";
}

/* line 57, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-remove:before {
  content: "\e014";
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-zoom-in:before {
  content: "\e015";
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-zoom-out:before {
  content: "\e016";
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-off:before {
  content: "\e017";
}

/* line 61, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-signal:before {
  content: "\e018";
}

/* line 62, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cog:before {
  content: "\e019";
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-trash:before {
  content: "\e020";
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-home:before {
  content: "\e021";
}

/* line 65, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-file:before {
  content: "\e022";
}

/* line 66, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-time:before {
  content: "\e023";
}

/* line 67, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-road:before {
  content: "\e024";
}

/* line 68, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-download-alt:before {
  content: "\e025";
}

/* line 69, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-download:before {
  content: "\e026";
}

/* line 70, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-upload:before {
  content: "\e027";
}

/* line 71, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-inbox:before {
  content: "\e028";
}

/* line 72, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-play-circle:before {
  content: "\e029";
}

/* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-repeat:before {
  content: "\e030";
}

/* line 74, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-refresh:before {
  content: "\e031";
}

/* line 75, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-list-alt:before {
  content: "\e032";
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-lock:before {
  content: "\e033";
}

/* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-flag:before {
  content: "\e034";
}

/* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-headphones:before {
  content: "\e035";
}

/* line 79, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-volume-off:before {
  content: "\e036";
}

/* line 80, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-volume-down:before {
  content: "\e037";
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-volume-up:before {
  content: "\e038";
}

/* line 82, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-qrcode:before {
  content: "\e039";
}

/* line 83, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-barcode:before {
  content: "\e040";
}

/* line 84, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tag:before {
  content: "\e041";
}

/* line 85, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tags:before {
  content: "\e042";
}

/* line 86, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-book:before {
  content: "\e043";
}

/* line 87, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bookmark:before {
  content: "\e044";
}

/* line 88, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-print:before {
  content: "\e045";
}

/* line 89, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-camera:before {
  content: "\e046";
}

/* line 90, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-font:before {
  content: "\e047";
}

/* line 91, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bold:before {
  content: "\e048";
}

/* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-italic:before {
  content: "\e049";
}

/* line 93, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-text-height:before {
  content: "\e050";
}

/* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-text-width:before {
  content: "\e051";
}

/* line 95, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-align-left:before {
  content: "\e052";
}

/* line 96, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-align-center:before {
  content: "\e053";
}

/* line 97, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-align-right:before {
  content: "\e054";
}

/* line 98, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-align-justify:before {
  content: "\e055";
}

/* line 99, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-list:before {
  content: "\e056";
}

/* line 100, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-indent-left:before {
  content: "\e057";
}

/* line 101, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-indent-right:before {
  content: "\e058";
}

/* line 102, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-facetime-video:before {
  content: "\e059";
}

/* line 103, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-picture:before {
  content: "\e060";
}

/* line 104, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-map-marker:before {
  content: "\e062";
}

/* line 105, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-adjust:before {
  content: "\e063";
}

/* line 106, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tint:before {
  content: "\e064";
}

/* line 107, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-edit:before {
  content: "\e065";
}

/* line 108, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-share:before {
  content: "\e066";
}

/* line 109, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-check:before {
  content: "\e067";
}

/* line 110, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-move:before {
  content: "\e068";
}

/* line 111, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-step-backward:before {
  content: "\e069";
}

/* line 112, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-fast-backward:before {
  content: "\e070";
}

/* line 113, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-backward:before {
  content: "\e071";
}

/* line 114, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-play:before {
  content: "\e072";
}

/* line 115, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-pause:before {
  content: "\e073";
}

/* line 116, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-stop:before {
  content: "\e074";
}

/* line 117, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-forward:before {
  content: "\e075";
}

/* line 118, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-fast-forward:before {
  content: "\e076";
}

/* line 119, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-step-forward:before {
  content: "\e077";
}

/* line 120, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-eject:before {
  content: "\e078";
}

/* line 121, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-chevron-left:before {
  content: "\e079";
}

/* line 122, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-chevron-right:before {
  content: "\e080";
}

/* line 123, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-plus-sign:before {
  content: "\e081";
}

/* line 124, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-minus-sign:before {
  content: "\e082";
}

/* line 125, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-remove-sign:before {
  content: "\e083";
}

/* line 126, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ok-sign:before {
  content: "\e084";
}

/* line 127, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-question-sign:before {
  content: "\e085";
}

/* line 128, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-info-sign:before {
  content: "\e086";
}

/* line 129, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-screenshot:before {
  content: "\e087";
}

/* line 130, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-remove-circle:before {
  content: "\e088";
}

/* line 131, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ok-circle:before {
  content: "\e089";
}

/* line 132, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ban-circle:before {
  content: "\e090";
}

/* line 133, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-arrow-left:before {
  content: "\e091";
}

/* line 134, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-arrow-right:before {
  content: "\e092";
}

/* line 135, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-arrow-up:before {
  content: "\e093";
}

/* line 136, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-arrow-down:before {
  content: "\e094";
}

/* line 137, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-share-alt:before {
  content: "\e095";
}

/* line 138, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-resize-full:before {
  content: "\e096";
}

/* line 139, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-resize-small:before {
  content: "\e097";
}

/* line 140, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-exclamation-sign:before {
  content: "\e101";
}

/* line 141, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-gift:before {
  content: "\e102";
}

/* line 142, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-leaf:before {
  content: "\e103";
}

/* line 143, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-fire:before {
  content: "\e104";
}

/* line 144, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-eye-open:before {
  content: "\e105";
}

/* line 145, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-eye-close:before {
  content: "\e106";
}

/* line 146, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-warning-sign:before {
  content: "\e107";
}

/* line 147, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-plane:before {
  content: "\e108";
}

/* line 148, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-calendar:before {
  content: "\e109";
}

/* line 149, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-random:before {
  content: "\e110";
}

/* line 150, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-comment:before {
  content: "\e111";
}

/* line 151, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-magnet:before {
  content: "\e112";
}

/* line 152, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-chevron-up:before {
  content: "\e113";
}

/* line 153, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-chevron-down:before {
  content: "\e114";
}

/* line 154, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-retweet:before {
  content: "\e115";
}

/* line 155, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-shopping-cart:before {
  content: "\e116";
}

/* line 156, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-folder-close:before {
  content: "\e117";
}

/* line 157, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-folder-open:before {
  content: "\e118";
}

/* line 158, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-resize-vertical:before {
  content: "\e119";
}

/* line 159, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-resize-horizontal:before {
  content: "\e120";
}

/* line 160, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hdd:before {
  content: "\e121";
}

/* line 161, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bullhorn:before {
  content: "\e122";
}

/* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bell:before {
  content: "\e123";
}

/* line 163, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-certificate:before {
  content: "\e124";
}

/* line 164, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-thumbs-up:before {
  content: "\e125";
}

/* line 165, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-thumbs-down:before {
  content: "\e126";
}

/* line 166, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hand-right:before {
  content: "\e127";
}

/* line 167, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hand-left:before {
  content: "\e128";
}

/* line 168, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hand-up:before {
  content: "\e129";
}

/* line 169, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hand-down:before {
  content: "\e130";
}

/* line 170, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-circle-arrow-right:before {
  content: "\e131";
}

/* line 171, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-circle-arrow-left:before {
  content: "\e132";
}

/* line 172, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-circle-arrow-up:before {
  content: "\e133";
}

/* line 173, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-circle-arrow-down:before {
  content: "\e134";
}

/* line 174, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-globe:before {
  content: "\e135";
}

/* line 175, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-wrench:before {
  content: "\e136";
}

/* line 176, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tasks:before {
  content: "\e137";
}

/* line 177, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-filter:before {
  content: "\e138";
}

/* line 178, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-briefcase:before {
  content: "\e139";
}

/* line 179, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-fullscreen:before {
  content: "\e140";
}

/* line 180, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-dashboard:before {
  content: "\e141";
}

/* line 181, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-paperclip:before {
  content: "\e142";
}

/* line 182, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-heart-empty:before {
  content: "\e143";
}

/* line 183, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-link:before {
  content: "\e144";
}

/* line 184, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-phone:before {
  content: "\e145";
}

/* line 185, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-pushpin:before {
  content: "\e146";
}

/* line 186, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-usd:before {
  content: "\e148";
}

/* line 187, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-gbp:before {
  content: "\e149";
}

/* line 188, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort:before {
  content: "\e150";
}

/* line 189, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-alphabet:before {
  content: "\e151";
}

/* line 190, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-alphabet-alt:before {
  content: "\e152";
}

/* line 191, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-order:before {
  content: "\e153";
}

/* line 192, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-order-alt:before {
  content: "\e154";
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-attributes:before {
  content: "\e155";
}

/* line 194, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sort-by-attributes-alt:before {
  content: "\e156";
}

/* line 195, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-unchecked:before {
  content: "\e157";
}

/* line 196, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-expand:before {
  content: "\e158";
}

/* line 197, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-collapse-down:before {
  content: "\e159";
}

/* line 198, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-collapse-up:before {
  content: "\e160";
}

/* line 199, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-log-in:before {
  content: "\e161";
}

/* line 200, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-flash:before {
  content: "\e162";
}

/* line 201, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-log-out:before {
  content: "\e163";
}

/* line 202, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-new-window:before {
  content: "\e164";
}

/* line 203, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-record:before {
  content: "\e165";
}

/* line 204, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-save:before {
  content: "\e166";
}

/* line 205, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-open:before {
  content: "\e167";
}

/* line 206, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-saved:before {
  content: "\e168";
}

/* line 207, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-import:before {
  content: "\e169";
}

/* line 208, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-export:before {
  content: "\e170";
}

/* line 209, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-send:before {
  content: "\e171";
}

/* line 210, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-floppy-disk:before {
  content: "\e172";
}

/* line 211, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-floppy-saved:before {
  content: "\e173";
}

/* line 212, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-floppy-remove:before {
  content: "\e174";
}

/* line 213, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-floppy-save:before {
  content: "\e175";
}

/* line 214, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-floppy-open:before {
  content: "\e176";
}

/* line 215, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-credit-card:before {
  content: "\e177";
}

/* line 216, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-transfer:before {
  content: "\e178";
}

/* line 217, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cutlery:before {
  content: "\e179";
}

/* line 218, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-header:before {
  content: "\e180";
}

/* line 219, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-compressed:before {
  content: "\e181";
}

/* line 220, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-earphone:before {
  content: "\e182";
}

/* line 221, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-phone-alt:before {
  content: "\e183";
}

/* line 222, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tower:before {
  content: "\e184";
}

/* line 223, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-stats:before {
  content: "\e185";
}

/* line 224, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sd-video:before {
  content: "\e186";
}

/* line 225, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hd-video:before {
  content: "\e187";
}

/* line 226, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-subtitles:before {
  content: "\e188";
}

/* line 227, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sound-stereo:before {
  content: "\e189";
}

/* line 228, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sound-dolby:before {
  content: "\e190";
}

/* line 229, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sound-5-1:before {
  content: "\e191";
}

/* line 230, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sound-6-1:before {
  content: "\e192";
}

/* line 231, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sound-7-1:before {
  content: "\e193";
}

/* line 232, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-copyright-mark:before {
  content: "\e194";
}

/* line 233, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-registration-mark:before {
  content: "\e195";
}

/* line 234, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cloud-download:before {
  content: "\e197";
}

/* line 235, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cloud-upload:before {
  content: "\e198";
}

/* line 236, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tree-conifer:before {
  content: "\e199";
}

/* line 237, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tree-deciduous:before {
  content: "\e200";
}

/* line 238, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-cd:before {
  content: "\e201";
}

/* line 239, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-save-file:before {
  content: "\e202";
}

/* line 240, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-open-file:before {
  content: "\e203";
}

/* line 241, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-level-up:before {
  content: "\e204";
}

/* line 242, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-copy:before {
  content: "\e205";
}

/* line 243, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-paste:before {
  content: "\e206";
}

/* line 252, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-alert:before {
  content: "\e209";
}

/* line 253, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-equalizer:before {
  content: "\e210";
}

/* line 254, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-king:before {
  content: "\e211";
}

/* line 255, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-queen:before {
  content: "\e212";
}

/* line 256, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-pawn:before {
  content: "\e213";
}

/* line 257, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bishop:before {
  content: "\e214";
}

/* line 258, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-knight:before {
  content: "\e215";
}

/* line 259, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-baby-formula:before {
  content: "\e216";
}

/* line 260, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-tent:before {
  content: "\26fa";
}

/* line 261, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-blackboard:before {
  content: "\e218";
}

/* line 262, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bed:before {
  content: "\e219";
}

/* line 263, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-apple:before {
  content: "\f8ff";
}

/* line 264, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-erase:before {
  content: "\e221";
}

/* line 265, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-hourglass:before {
  content: "\231b";
}

/* line 266, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-lamp:before {
  content: "\e223";
}

/* line 267, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-duplicate:before {
  content: "\e224";
}

/* line 268, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-piggy-bank:before {
  content: "\e225";
}

/* line 269, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-scissors:before {
  content: "\e226";
}

/* line 270, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-bitcoin:before {
  content: "\e227";
}

/* line 271, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-btc:before {
  content: "\e227";
}

/* line 272, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-xbt:before {
  content: "\e227";
}

/* line 273, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-yen:before {
  content: "\00a5";
}

/* line 274, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-jpy:before {
  content: "\00a5";
}

/* line 275, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ruble:before {
  content: "\20bd";
}

/* line 276, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-rub:before {
  content: "\20bd";
}

/* line 277, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-scale:before {
  content: "\e230";
}

/* line 278, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ice-lolly:before {
  content: "\e231";
}

/* line 279, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-ice-lolly-tasted:before {
  content: "\e232";
}

/* line 280, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-education:before {
  content: "\e233";
}

/* line 281, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-option-horizontal:before {
  content: "\e234";
}

/* line 282, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-option-vertical:before {
  content: "\e235";
}

/* line 283, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-menu-hamburger:before {
  content: "\e236";
}

/* line 284, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-modal-window:before {
  content: "\e237";
}

/* line 285, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-oil:before {
  content: "\e238";
}

/* line 286, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-grain:before {
  content: "\e239";
}

/* line 287, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-sunglasses:before {
  content: "\e240";
}

/* line 288, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-text-size:before {
  content: "\e241";
}

/* line 289, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-text-color:before {
  content: "\e242";
}

/* line 290, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-text-background:before {
  content: "\e243";
}

/* line 291, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-top:before {
  content: "\e244";
}

/* line 292, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-bottom:before {
  content: "\e245";
}

/* line 293, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-horizontal:before {
  content: "\e246";
}

/* line 294, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-left:before {
  content: "\e247";
}

/* line 295, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-vertical:before {
  content: "\e248";
}

/* line 296, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-object-align-right:before {
  content: "\e249";
}

/* line 297, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-triangle-right:before {
  content: "\e250";
}

/* line 298, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-triangle-left:before {
  content: "\e251";
}

/* line 299, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-triangle-bottom:before {
  content: "\e252";
}

/* line 300, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-triangle-top:before {
  content: "\e253";
}

/* line 301, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-console:before {
  content: "\e254";
}

/* line 302, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-superscript:before {
  content: "\e255";
}

/* line 303, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-subscript:before {
  content: "\e256";
}

/* line 304, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-menu-left:before {
  content: "\e257";
}

/* line 305, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-menu-right:before {
  content: "\e258";
}

/* line 306, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-menu-down:before {
  content: "\e259";
}

/* line 307, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_glyphicons.scss */
.glyphicon-menu-up:before {
  content: "\e260";
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
html {
  font-size: 10px;
  -webkit-tap-highlight-color: transparent;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.42857;
  color: #333333;
  background-color: #fff;
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

/* line 48, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
a {
  color: #337ab7;
  text-decoration: none;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
a:hover, a:focus {
  color: #23527c;
  text-decoration: underline;
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
a:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

/* line 69, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
figure {
  margin: 0;
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
img {
  vertical-align: middle;
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

/* line 86, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.img-rounded {
  border-radius: 6px;
}

/* line 93, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.img-thumbnail {
  padding: 4px;
  line-height: 1.42857;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  display: inline-block;
  max-width: 100%;
  height: auto;
}

/* line 106, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.img-circle {
  border-radius: 50%;
}

/* line 113, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
hr {
  margin-top: 20px;
  margin-bottom: 20px;
  border: 0;
  border-top: 1px solid #eeeeee;
}

/* line 125, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* line 141, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}

/* line 159, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_scaffolding.scss */
[role="button"] {
  cursor: pointer;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: inherit;
  font-weight: 500;
  line-height: 1.1;
  color: inherit;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h1 small,
h1 .small, h2 small,
h2 .small, h3 small,
h3 .small, h4 small,
h4 .small, h5 small,
h5 .small, h6 small,
h6 .small,
.h1 small,
.h1 .small, .h2 small,
.h2 .small, .h3 small,
.h3 .small, .h4 small,
.h4 .small, .h5 small,
.h5 .small, .h6 small,
.h6 .small {
  font-weight: normal;
  line-height: 1;
  color: #777777;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h1, .h1,
h2, .h2,
h3, .h3 {
  margin-top: 20px;
  margin-bottom: 10px;
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h1 small,
h1 .small, .h1 small,
.h1 .small,
h2 small,
h2 .small, .h2 small,
.h2 .small,
h3 small,
h3 .small, .h3 small,
.h3 .small {
  font-size: 65%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: 10px;
  margin-bottom: 10px;
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h4 small,
h4 .small, .h4 small,
.h4 .small,
h5 small,
h5 .small, .h5 small,
.h5 .small,
h6 small,
h6 .small, .h6 small,
.h6 .small {
  font-size: 75%;
}

/* line 47, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h1, .h1 {
  font-size: 36px;
}

/* line 48, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h2, .h2 {
  font-size: 30px;
}

/* line 49, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h3, .h3 {
  font-size: 24px;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h4, .h4 {
  font-size: 18px;
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h5, .h5 {
  font-size: 14px;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
h6, .h6 {
  font-size: 12px;
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
p {
  margin: 0 0 10px;
}

/* line 62, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.lead {
  margin-bottom: 20px;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.4;
}

@media (min-width: 768px) {
  /* line 62, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
  .lead {
    font-size: 21px;
  }
}

/* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
small,
.small {
  font-size: 85%;
}

/* line 83, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
mark,
.mark {
  background-color: #fcf8e3;
  padding: .2em;
}

/* line 90, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-left {
  text-align: left;
}

/* line 91, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-right {
  text-align: right;
}

/* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-center {
  text-align: center;
}

/* line 93, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-justify {
  text-align: justify;
}

/* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-nowrap {
  white-space: nowrap;
}

/* line 97, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-lowercase {
  text-transform: lowercase;
}

/* line 98, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-uppercase, .initialism {
  text-transform: uppercase;
}

/* line 99, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-capitalize {
  text-transform: capitalize;
}

/* line 102, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.text-muted {
  color: #777777;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
.text-primary {
  color: #337ab7;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
a.text-primary:hover,
a.text-primary:focus {
  color: #286090;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
.text-success {
  color: #3c763d;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
a.text-success:hover,
a.text-success:focus {
  color: #2b542c;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
.text-info {
  color: #31708f;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
a.text-info:hover,
a.text-info:focus {
  color: #245269;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
.text-warning {
  color: #8a6d3b;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
a.text-warning:hover,
a.text-warning:focus {
  color: #66512c;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
.text-danger {
  color: #a94442;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_text-emphasis.scss */
a.text-danger:hover,
a.text-danger:focus {
  color: #843534;
}

/* line 119, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.bg-primary {
  color: #fff;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
.bg-primary {
  background-color: #337ab7;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
a.bg-primary:hover,
a.bg-primary:focus {
  background-color: #286090;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
.bg-success {
  background-color: #dff0d8;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
a.bg-success:hover,
a.bg-success:focus {
  background-color: #c1e2b3;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
.bg-info {
  background-color: #d9edf7;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
a.bg-info:hover,
a.bg-info:focus {
  background-color: #afd9ee;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
.bg-warning {
  background-color: #fcf8e3;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
a.bg-warning:hover,
a.bg-warning:focus {
  background-color: #f7ecb5;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
.bg-danger {
  background-color: #f2dede;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_background-variant.scss */
a.bg-danger:hover,
a.bg-danger:focus {
  background-color: #e4b9b9;
}

/* line 138, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.page-header {
  padding-bottom: 9px;
  margin: 40px 0 20px;
  border-bottom: 1px solid #eeeeee;
}

/* line 149, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
ul,
ol {
  margin-top: 0;
  margin-bottom: 10px;
}

/* line 153, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
ul ul,
ul ol,
ol ul,
ol ol {
  margin-bottom: 0;
}

/* line 167, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.list-unstyled {
  padding-left: 0;
  list-style: none;
}

/* line 173, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px;
}

/* line 177, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.list-inline > li {
  display: inline-block;
  padding-left: 5px;
  padding-right: 5px;
}

/* line 185, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
dl {
  margin-top: 0;
  margin-bottom: 20px;
}

/* line 189, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
dt,
dd {
  line-height: 1.42857;
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
dt {
  font-weight: bold;
}

/* line 196, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
dd {
  margin-left: 0;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.dl-horizontal dd:before, .dl-horizontal dd:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.dl-horizontal dd:after {
  clear: both;
}

@media (min-width: 768px) {
  /* line 211, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
  .dl-horizontal dt {
    float: left;
    width: 160px;
    clear: left;
    text-align: right;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  /* line 218, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
  .dl-horizontal dd {
    margin-left: 180px;
  }
}

/* line 229, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #777777;
}

/* line 235, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.initialism {
  font-size: 90%;
}

/* line 241, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
blockquote {
  padding: 10px 20px;
  margin: 0 0 20px;
  font-size: 17.5px;
  border-left: 5px solid #eeeeee;
}

/* line 250, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
blockquote p:last-child,
blockquote ul:last-child,
blockquote ol:last-child {
  margin-bottom: 0;
}

/* line 257, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
blockquote footer,
blockquote small,
blockquote .small {
  display: block;
  font-size: 80%;
  line-height: 1.42857;
  color: #777777;
}

/* line 265, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
blockquote footer:before,
blockquote small:before,
blockquote .small:before {
  content: '\2014 \00A0';
}

/* line 274, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.blockquote-reverse,
blockquote.pull-right {
  padding-right: 15px;
  padding-left: 0;
  border-right: 5px solid #eeeeee;
  border-left: 0;
  text-align: right;
}

/* line 286, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.blockquote-reverse footer:before,
.blockquote-reverse small:before,
.blockquote-reverse .small:before,
blockquote.pull-right footer:before,
blockquote.pull-right small:before,
blockquote.pull-right .small:before {
  content: '';
}

/* line 287, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
.blockquote-reverse footer:after,
.blockquote-reverse small:after,
.blockquote-reverse .small:after,
blockquote.pull-right footer:after,
blockquote.pull-right small:after,
blockquote.pull-right .small:after {
  content: '\00A0 \2014';
}

/* line 294, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_type.scss */
address {
  margin-bottom: 20px;
  font-style: normal;
  line-height: 1.42857;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
code,
kbd,
pre,
samp {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
code {
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 4px;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
kbd {
  padding: 2px 4px;
  font-size: 90%;
  color: #fff;
  background-color: #333;
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25);
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
kbd kbd {
  padding: 0;
  font-size: 100%;
  font-weight: bold;
  box-shadow: none;
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
pre {
  display: block;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.42857;
  word-break: break-all;
  word-wrap: break-word;
  color: #333333;
  background-color: #f5f5f5;
  border: 1px solid #ccc;
  border-radius: 4px;
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
pre code {
  padding: 0;
  font-size: inherit;
  color: inherit;
  white-space: pre-wrap;
  background-color: transparent;
  border-radius: 0;
}

/* line 66, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_code.scss */
.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.container:before, .container:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.container:after {
  clear: both;
}

@media (min-width: 768px) {
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
  .container {
    width: 750px;
  }
}

@media (min-width: 992px) {
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
  .container {
    width: 970px;
  }
}

@media (min-width: 1200px) {
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
  .container {
    width: 1170px;
  }
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.container-fluid:before, .container-fluid:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.container-fluid:after {
  clear: both;
}

/* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_grid.scss */
.row {
  margin-left: -15px;
  margin-right: -15px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.row:before, .row:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.row:after {
  clear: both;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
  position: relative;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  float: left;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-1 {
  width: 8.33333%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-2 {
  width: 16.66667%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-3 {
  width: 25%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-4 {
  width: 33.33333%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-5 {
  width: 41.66667%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-6 {
  width: 50%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-7 {
  width: 58.33333%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-8 {
  width: 66.66667%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-9 {
  width: 75%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-10 {
  width: 83.33333%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-11 {
  width: 91.66667%;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-12 {
  width: 100%;
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-0 {
  right: auto;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-1 {
  right: 8.33333%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-2 {
  right: 16.66667%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-3 {
  right: 25%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-4 {
  right: 33.33333%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-5 {
  right: 41.66667%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-6 {
  right: 50%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-7 {
  right: 58.33333%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-8 {
  right: 66.66667%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-9 {
  right: 75%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-10 {
  right: 83.33333%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-11 {
  right: 91.66667%;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-pull-12 {
  right: 100%;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-0 {
  left: auto;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-1 {
  left: 8.33333%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-2 {
  left: 16.66667%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-3 {
  left: 25%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-4 {
  left: 33.33333%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-5 {
  left: 41.66667%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-6 {
  left: 50%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-7 {
  left: 58.33333%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-8 {
  left: 66.66667%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-9 {
  left: 75%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-10 {
  left: 83.33333%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-11 {
  left: 91.66667%;
}

/* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-push-12 {
  left: 100%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-0 {
  margin-left: 0%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-1 {
  margin-left: 8.33333%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-2 {
  margin-left: 16.66667%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-3 {
  margin-left: 25%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-4 {
  margin-left: 33.33333%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-5 {
  margin-left: 41.66667%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-6 {
  margin-left: 50%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-7 {
  margin-left: 58.33333%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-8 {
  margin-left: 66.66667%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-9 {
  margin-left: 75%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-10 {
  margin-left: 83.33333%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-11 {
  margin-left: 91.66667%;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
.col-xs-offset-12 {
  margin-left: 100%;
}

@media (min-width: 768px) {
  /* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
    float: left;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-1 {
    width: 8.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-2 {
    width: 16.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-3 {
    width: 25%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-4 {
    width: 33.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-5 {
    width: 41.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-6 {
    width: 50%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-7 {
    width: 58.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-8 {
    width: 66.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-9 {
    width: 75%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-10 {
    width: 83.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-11 {
    width: 91.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-12 {
    width: 100%;
  }
  /* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-0 {
    right: auto;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-1 {
    right: 8.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-2 {
    right: 16.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-3 {
    right: 25%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-4 {
    right: 33.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-5 {
    right: 41.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-6 {
    right: 50%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-7 {
    right: 58.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-8 {
    right: 66.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-9 {
    right: 75%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-10 {
    right: 83.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-11 {
    right: 91.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-pull-12 {
    right: 100%;
  }
  /* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-0 {
    left: auto;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-1 {
    left: 8.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-2 {
    left: 16.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-3 {
    left: 25%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-4 {
    left: 33.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-5 {
    left: 41.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-6 {
    left: 50%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-7 {
    left: 58.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-8 {
    left: 66.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-9 {
    left: 75%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-10 {
    left: 83.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-11 {
    left: 91.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-push-12 {
    left: 100%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-0 {
    margin-left: 0%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-1 {
    margin-left: 8.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-2 {
    margin-left: 16.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-3 {
    margin-left: 25%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-4 {
    margin-left: 33.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-5 {
    margin-left: 41.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-6 {
    margin-left: 50%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-7 {
    margin-left: 58.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-8 {
    margin-left: 66.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-9 {
    margin-left: 75%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-10 {
    margin-left: 83.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-11 {
    margin-left: 91.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-sm-offset-12 {
    margin-left: 100%;
  }
}

@media (min-width: 992px) {
  /* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
    float: left;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-1 {
    width: 8.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-2 {
    width: 16.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-3 {
    width: 25%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-4 {
    width: 33.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-5 {
    width: 41.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-6 {
    width: 50%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-7 {
    width: 58.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-8 {
    width: 66.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-9 {
    width: 75%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-10 {
    width: 83.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-11 {
    width: 91.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-12 {
    width: 100%;
  }
  /* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-0 {
    right: auto;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-1 {
    right: 8.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-2 {
    right: 16.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-3 {
    right: 25%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-4 {
    right: 33.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-5 {
    right: 41.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-6 {
    right: 50%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-7 {
    right: 58.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-8 {
    right: 66.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-9 {
    right: 75%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-10 {
    right: 83.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-11 {
    right: 91.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-pull-12 {
    right: 100%;
  }
  /* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-0 {
    left: auto;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-1 {
    left: 8.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-2 {
    left: 16.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-3 {
    left: 25%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-4 {
    left: 33.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-5 {
    left: 41.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-6 {
    left: 50%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-7 {
    left: 58.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-8 {
    left: 66.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-9 {
    left: 75%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-10 {
    left: 83.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-11 {
    left: 91.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-push-12 {
    left: 100%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-0 {
    margin-left: 0%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-1 {
    margin-left: 8.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-2 {
    margin-left: 16.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-3 {
    margin-left: 25%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-4 {
    margin-left: 33.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-5 {
    margin-left: 41.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-6 {
    margin-left: 50%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-7 {
    margin-left: 58.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-8 {
    margin-left: 66.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-9 {
    margin-left: 75%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-10 {
    margin-left: 83.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-11 {
    margin-left: 91.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-md-offset-12 {
    margin-left: 100%;
  }
}

@media (min-width: 1200px) {
  /* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
    float: left;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-1 {
    width: 8.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-2 {
    width: 16.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-3 {
    width: 25%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-4 {
    width: 33.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-5 {
    width: 41.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-6 {
    width: 50%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-7 {
    width: 58.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-8 {
    width: 66.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-9 {
    width: 75%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-10 {
    width: 83.33333%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-11 {
    width: 91.66667%;
  }
  /* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-12 {
    width: 100%;
  }
  /* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-0 {
    right: auto;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-1 {
    right: 8.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-2 {
    right: 16.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-3 {
    right: 25%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-4 {
    right: 33.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-5 {
    right: 41.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-6 {
    right: 50%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-7 {
    right: 58.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-8 {
    right: 66.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-9 {
    right: 75%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-10 {
    right: 83.33333%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-11 {
    right: 91.66667%;
  }
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-pull-12 {
    right: 100%;
  }
  /* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-0 {
    left: auto;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-1 {
    left: 8.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-2 {
    left: 16.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-3 {
    left: 25%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-4 {
    left: 33.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-5 {
    left: 41.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-6 {
    left: 50%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-7 {
    left: 58.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-8 {
    left: 66.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-9 {
    left: 75%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-10 {
    left: 83.33333%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-11 {
    left: 91.66667%;
  }
  /* line 40, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-push-12 {
    left: 100%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-0 {
    margin-left: 0%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-1 {
    margin-left: 8.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-2 {
    margin-left: 16.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-3 {
    margin-left: 25%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-4 {
    margin-left: 33.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-5 {
    margin-left: 41.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-6 {
    margin-left: 50%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-7 {
    margin-left: 58.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-8 {
    margin-left: 66.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-9 {
    margin-left: 75%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-10 {
    margin-left: 83.33333%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-11 {
    margin-left: 91.66667%;
  }
  /* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_grid-framework.scss */
  .col-lg-offset-12 {
    margin-left: 100%;
  }
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
table {
  background-color: transparent;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
caption {
  padding-top: 8px;
  padding-bottom: 8px;
  color: #777777;
  text-align: left;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
th {
  text-align: left;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 20px;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td {
  padding: 8px;
  line-height: 1.42857;
  vertical-align: top;
  border-top: 1px solid #ddd;
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table > thead > tr > th {
  vertical-align: bottom;
  border-bottom: 2px solid #ddd;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table > caption + thead > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > th,
.table > thead:first-child > tr:first-child > td {
  border-top: 0;
}

/* line 57, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table > tbody + tbody {
  border-top: 2px solid #ddd;
}

/* line 62, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table .table {
  background-color: #fff;
}

/* line 75, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-condensed > thead > tr > th,
.table-condensed > thead > tr > td,
.table-condensed > tbody > tr > th,
.table-condensed > tbody > tr > td,
.table-condensed > tfoot > tr > th,
.table-condensed > tfoot > tr > td {
  padding: 5px;
}

/* line 88, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-bordered {
  border: 1px solid #ddd;
}

/* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > th,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > th,
.table-bordered > tfoot > tr > td {
  border: 1px solid #ddd;
}

/* line 101, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
  border-bottom-width: 2px;
}

/* line 114, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-striped > tbody > tr:nth-of-type(odd) {
  background-color: #f9f9f9;
}

/* line 125, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-hover > tbody > tr:hover {
  background-color: #f5f5f5;
}

/* line 135, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
table col[class*="col-"] {
  position: static;
  float: none;
  display: table-column;
}

/* line 143, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
table td[class*="col-"],
table th[class*="col-"] {
  position: static;
  float: none;
  display: table-cell;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table > thead > tr > td.active,
.table > thead > tr > th.active,
.table > thead > tr.active > td,
.table > thead > tr.active > th,
.table > tbody > tr > td.active,
.table > tbody > tr > th.active,
.table > tbody > tr.active > td,
.table > tbody > tr.active > th,
.table > tfoot > tr > td.active,
.table > tfoot > tr > th.active,
.table > tfoot > tr.active > td,
.table > tfoot > tr.active > th {
  background-color: #f5f5f5;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table-hover > tbody > tr > td.active:hover,
.table-hover > tbody > tr > th.active:hover,
.table-hover > tbody > tr.active:hover > td,
.table-hover > tbody > tr:hover > .active,
.table-hover > tbody > tr.active:hover > th {
  background-color: #e8e8e8;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table > thead > tr > td.success,
.table > thead > tr > th.success,
.table > thead > tr.success > td,
.table > thead > tr.success > th,
.table > tbody > tr > td.success,
.table > tbody > tr > th.success,
.table > tbody > tr.success > td,
.table > tbody > tr.success > th,
.table > tfoot > tr > td.success,
.table > tfoot > tr > th.success,
.table > tfoot > tr.success > td,
.table > tfoot > tr.success > th {
  background-color: #dff0d8;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table-hover > tbody > tr > td.success:hover,
.table-hover > tbody > tr > th.success:hover,
.table-hover > tbody > tr.success:hover > td,
.table-hover > tbody > tr:hover > .success,
.table-hover > tbody > tr.success:hover > th {
  background-color: #d0e9c6;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table > thead > tr > td.info,
.table > thead > tr > th.info,
.table > thead > tr.info > td,
.table > thead > tr.info > th,
.table > tbody > tr > td.info,
.table > tbody > tr > th.info,
.table > tbody > tr.info > td,
.table > tbody > tr.info > th,
.table > tfoot > tr > td.info,
.table > tfoot > tr > th.info,
.table > tfoot > tr.info > td,
.table > tfoot > tr.info > th {
  background-color: #d9edf7;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table-hover > tbody > tr > td.info:hover,
.table-hover > tbody > tr > th.info:hover,
.table-hover > tbody > tr.info:hover > td,
.table-hover > tbody > tr:hover > .info,
.table-hover > tbody > tr.info:hover > th {
  background-color: #c4e3f3;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table > thead > tr > td.warning,
.table > thead > tr > th.warning,
.table > thead > tr.warning > td,
.table > thead > tr.warning > th,
.table > tbody > tr > td.warning,
.table > tbody > tr > th.warning,
.table > tbody > tr.warning > td,
.table > tbody > tr.warning > th,
.table > tfoot > tr > td.warning,
.table > tfoot > tr > th.warning,
.table > tfoot > tr.warning > td,
.table > tfoot > tr.warning > th {
  background-color: #fcf8e3;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table-hover > tbody > tr > td.warning:hover,
.table-hover > tbody > tr > th.warning:hover,
.table-hover > tbody > tr.warning:hover > td,
.table-hover > tbody > tr:hover > .warning,
.table-hover > tbody > tr.warning:hover > th {
  background-color: #faf2cc;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table > thead > tr > td.danger,
.table > thead > tr > th.danger,
.table > thead > tr.danger > td,
.table > thead > tr.danger > th,
.table > tbody > tr > td.danger,
.table > tbody > tr > th.danger,
.table > tbody > tr.danger > td,
.table > tbody > tr.danger > th,
.table > tfoot > tr > td.danger,
.table > tfoot > tr > th.danger,
.table > tfoot > tr.danger > td,
.table > tfoot > tr.danger > th {
  background-color: #f2dede;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_table-row.scss */
.table-hover > tbody > tr > td.danger:hover,
.table-hover > tbody > tr > th.danger:hover,
.table-hover > tbody > tr.danger:hover > td,
.table-hover > tbody > tr:hover > .danger,
.table-hover > tbody > tr.danger:hover > th {
  background-color: #ebcccc;
}

/* line 171, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
.table-responsive {
  overflow-x: auto;
  min-height: 0.01%;
}

@media screen and (max-width: 767px) {
  /* line 171, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive {
    width: 100%;
    margin-bottom: 15px;
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid #ddd;
  }
  /* line 183, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table {
    margin-bottom: 0;
  }
  /* line 191, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table > thead > tr > th,
  .table-responsive > .table > thead > tr > td,
  .table-responsive > .table > tbody > tr > th,
  .table-responsive > .table > tbody > tr > td,
  .table-responsive > .table > tfoot > tr > th,
  .table-responsive > .table > tfoot > tr > td {
    white-space: nowrap;
  }
  /* line 200, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table-bordered {
    border: 0;
  }
  /* line 208, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table-bordered > thead > tr > th:first-child,
  .table-responsive > .table-bordered > thead > tr > td:first-child,
  .table-responsive > .table-bordered > tbody > tr > th:first-child,
  .table-responsive > .table-bordered > tbody > tr > td:first-child,
  .table-responsive > .table-bordered > tfoot > tr > th:first-child,
  .table-responsive > .table-bordered > tfoot > tr > td:first-child {
    border-left: 0;
  }
  /* line 212, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table-bordered > thead > tr > th:last-child,
  .table-responsive > .table-bordered > thead > tr > td:last-child,
  .table-responsive > .table-bordered > tbody > tr > th:last-child,
  .table-responsive > .table-bordered > tbody > tr > td:last-child,
  .table-responsive > .table-bordered > tfoot > tr > th:last-child,
  .table-responsive > .table-bordered > tfoot > tr > td:last-child {
    border-right: 0;
  }
  /* line 225, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tables.scss */
  .table-responsive > .table-bordered > tbody > tr:last-child > th,
  .table-responsive > .table-bordered > tbody > tr:last-child > td,
  .table-responsive > .table-bordered > tfoot > tr:last-child > th,
  .table-responsive > .table-bordered > tfoot > tr:last-child > td {
    border-bottom: 0;
  }
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  min-width: 0;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: 20px;
  font-size: 21px;
  line-height: inherit;
  color: #333333;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
label {
  display: inline-block;
  max-width: 100%;
  margin-bottom: 5px;
  font-weight: bold;
}

/* line 47, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="search"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9;
  line-height: normal;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="file"] {
  display: block;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="range"] {
  display: block;
  width: 100%;
}

/* line 70, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
select[multiple],
select[size] {
  height: auto;
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

/* line 83, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
output {
  display: block;
  padding-top: 7px;
  font-size: 14px;
  line-height: 1.42857;
  color: #555555;
}

/* line 114, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control {
  display: block;
  width: 100%;
  height: 34px;
  padding: 6px 12px;
  font-size: 14px;
  line-height: 1.42857;
  color: #555555;
  background-color: #fff;
  background-image: none;
  border: 1px solid #ccc;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
}

/* line 57, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.form-control:focus {
  border-color: #66afe9;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);
}

/* line 103, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_vendor-prefixes.scss */
.form-control::-moz-placeholder {
  color: #999;
  opacity: 1;
}

/* line 107, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_vendor-prefixes.scss */
.form-control:-ms-input-placeholder {
  color: #999;
}

/* line 108, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_vendor-prefixes.scss */
.form-control::-webkit-input-placeholder {
  color: #999;
}

/* line 136, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control::-ms-expand {
  border: 0;
  background-color: transparent;
}

/* line 146, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control[disabled], .form-control[readonly],
fieldset[disabled] .form-control {
  background-color: #eeeeee;
  opacity: 1;
}

/* line 153, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control[disabled],
fieldset[disabled] .form-control {
  cursor: not-allowed;
}

/* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
textarea.form-control {
  height: auto;
}

/* line 174, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="search"] {
  -webkit-appearance: none;
}

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  /* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  input[type="date"].form-control,
  input[type="time"].form-control,
  input[type="datetime-local"].form-control,
  input[type="month"].form-control {
    line-height: 34px;
  }
  /* line 197, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  input[type="date"].input-sm, .input-group-sm > input[type="date"].form-control,
  .input-group-sm > input[type="date"].input-group-addon,
  .input-group-sm > .input-group-btn > input[type="date"].btn,
  .input-group-sm input[type="date"],
  input[type="time"].input-sm,
  .input-group-sm > input[type="time"].form-control,
  .input-group-sm > input[type="time"].input-group-addon,
  .input-group-sm > .input-group-btn > input[type="time"].btn,
  .input-group-sm
  input[type="time"],
  input[type="datetime-local"].input-sm,
  .input-group-sm > input[type="datetime-local"].form-control,
  .input-group-sm > input[type="datetime-local"].input-group-addon,
  .input-group-sm > .input-group-btn > input[type="datetime-local"].btn,
  .input-group-sm
  input[type="datetime-local"],
  input[type="month"].input-sm,
  .input-group-sm > input[type="month"].form-control,
  .input-group-sm > input[type="month"].input-group-addon,
  .input-group-sm > .input-group-btn > input[type="month"].btn,
  .input-group-sm
  input[type="month"] {
    line-height: 30px;
  }
  /* line 202, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  input[type="date"].input-lg, .input-group-lg > input[type="date"].form-control,
  .input-group-lg > input[type="date"].input-group-addon,
  .input-group-lg > .input-group-btn > input[type="date"].btn,
  .input-group-lg input[type="date"],
  input[type="time"].input-lg,
  .input-group-lg > input[type="time"].form-control,
  .input-group-lg > input[type="time"].input-group-addon,
  .input-group-lg > .input-group-btn > input[type="time"].btn,
  .input-group-lg
  input[type="time"],
  input[type="datetime-local"].input-lg,
  .input-group-lg > input[type="datetime-local"].form-control,
  .input-group-lg > input[type="datetime-local"].input-group-addon,
  .input-group-lg > .input-group-btn > input[type="datetime-local"].btn,
  .input-group-lg
  input[type="datetime-local"],
  input[type="month"].input-lg,
  .input-group-lg > input[type="month"].form-control,
  .input-group-lg > input[type="month"].input-group-addon,
  .input-group-lg > .input-group-btn > input[type="month"].btn,
  .input-group-lg
  input[type="month"] {
    line-height: 46px;
  }
}

/* line 215, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group {
  margin-bottom: 15px;
}

/* line 224, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;
}

/* line 231, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio label,
.checkbox label {
  min-height: 20px;
  padding-left: 20px;
  margin-bottom: 0;
  font-weight: normal;
  cursor: pointer;
}

/* line 239, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
  margin-top: 4px \9;
}

/* line 248, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px;
}

/* line 254, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}

/* line 264, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px;
}

/* line 276, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
input[type="radio"][disabled], input[type="radio"].disabled,
fieldset[disabled] input[type="radio"],
input[type="checkbox"][disabled],
input[type="checkbox"].disabled,
fieldset[disabled]
input[type="checkbox"] {
  cursor: not-allowed;
}

/* line 285, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio-inline.disabled,
fieldset[disabled] .radio-inline,
.checkbox-inline.disabled,
fieldset[disabled]
.checkbox-inline {
  cursor: not-allowed;
}

/* line 295, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.radio.disabled label,
fieldset[disabled] .radio label,
.checkbox.disabled label,
fieldset[disabled]
.checkbox label {
  cursor: not-allowed;
}

/* line 307, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control-static {
  padding-top: 7px;
  padding-bottom: 7px;
  margin-bottom: 0;
  min-height: 34px;
}

/* line 315, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control-static.input-lg, .input-group-lg > .form-control-static.form-control,
.input-group-lg > .form-control-static.input-group-addon,
.input-group-lg > .input-group-btn > .form-control-static.btn, .form-control-static.input-sm, .input-group-sm > .form-control-static.form-control,
.input-group-sm > .form-control-static.input-group-addon,
.input-group-sm > .input-group-btn > .form-control-static.btn {
  padding-left: 0;
  padding-right: 0;
}

/* line 71, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.input-sm, .input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .btn {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}

/* line 79, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
select.input-sm, .input-group-sm > select.form-control,
.input-group-sm > select.input-group-addon,
.input-group-sm > .input-group-btn > select.btn {
  height: 30px;
  line-height: 30px;
}

/* line 84, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
textarea.input-sm, .input-group-sm > textarea.form-control,
.input-group-sm > textarea.input-group-addon,
.input-group-sm > .input-group-btn > textarea.btn,
select[multiple].input-sm,
.input-group-sm > select[multiple].form-control,
.input-group-sm > select[multiple].input-group-addon,
.input-group-sm > .input-group-btn > select[multiple].btn {
  height: auto;
}

/* line 333, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-sm .form-control {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}

/* line 340, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-sm select.form-control {
  height: 30px;
  line-height: 30px;
}

/* line 344, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-sm textarea.form-control,
.form-group-sm select[multiple].form-control {
  height: auto;
}

/* line 348, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-sm .form-control-static {
  height: 30px;
  min-height: 32px;
  padding: 6px 10px;
  font-size: 12px;
  line-height: 1.5;
}

/* line 71, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.input-lg, .input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .btn {
  height: 46px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.33333;
  border-radius: 6px;
}

/* line 79, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
select.input-lg, .input-group-lg > select.form-control,
.input-group-lg > select.input-group-addon,
.input-group-lg > .input-group-btn > select.btn {
  height: 46px;
  line-height: 46px;
}

/* line 84, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
textarea.input-lg, .input-group-lg > textarea.form-control,
.input-group-lg > textarea.input-group-addon,
.input-group-lg > .input-group-btn > textarea.btn,
select[multiple].input-lg,
.input-group-lg > select[multiple].form-control,
.input-group-lg > select[multiple].input-group-addon,
.input-group-lg > .input-group-btn > select[multiple].btn {
  height: auto;
}

/* line 359, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-lg .form-control {
  height: 46px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.33333;
  border-radius: 6px;
}

/* line 366, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-lg select.form-control {
  height: 46px;
  line-height: 46px;
}

/* line 370, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-lg textarea.form-control,
.form-group-lg select[multiple].form-control {
  height: auto;
}

/* line 374, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-group-lg .form-control-static {
  height: 46px;
  min-height: 38px;
  padding: 11px 16px;
  font-size: 18px;
  line-height: 1.33333;
}

/* line 388, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.has-feedback {
  position: relative;
}

/* line 393, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.has-feedback .form-control {
  padding-right: 42.5px;
}

/* line 398, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  display: block;
  width: 34px;
  height: 34px;
  line-height: 34px;
  text-align: center;
  pointer-events: none;
}

/* line 410, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.input-lg + .form-control-feedback, .input-group-lg > .form-control + .form-control-feedback,
.input-group-lg > .input-group-addon + .form-control-feedback,
.input-group-lg > .input-group-btn > .btn + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  width: 46px;
  height: 46px;
  line-height: 46px;
}

/* line 417, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.input-sm + .form-control-feedback, .input-group-sm > .form-control + .form-control-feedback,
.input-group-sm > .input-group-addon + .form-control-feedback,
.input-group-sm > .input-group-btn > .btn + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  width: 30px;
  height: 30px;
  line-height: 30px;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-success .help-block,
.has-success .control-label,
.has-success .radio,
.has-success .checkbox,
.has-success .radio-inline,
.has-success .checkbox-inline,
.has-success.radio label,
.has-success.checkbox label,
.has-success.radio-inline label,
.has-success.checkbox-inline label {
  color: #3c763d;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-success .form-control {
  border-color: #3c763d;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-success .form-control:focus {
  border-color: #2b542c;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-success .input-group-addon {
  color: #3c763d;
  border-color: #3c763d;
  background-color: #dff0d8;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-success .form-control-feedback {
  color: #3c763d;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-warning .help-block,
.has-warning .control-label,
.has-warning .radio,
.has-warning .checkbox,
.has-warning .radio-inline,
.has-warning .checkbox-inline,
.has-warning.radio label,
.has-warning.checkbox label,
.has-warning.radio-inline label,
.has-warning.checkbox-inline label {
  color: #8a6d3b;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-warning .form-control {
  border-color: #8a6d3b;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-warning .form-control:focus {
  border-color: #66512c;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-warning .input-group-addon {
  color: #8a6d3b;
  border-color: #8a6d3b;
  background-color: #fcf8e3;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-warning .form-control-feedback {
  color: #8a6d3b;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-error .help-block,
.has-error .control-label,
.has-error .radio,
.has-error .checkbox,
.has-error .radio-inline,
.has-error .checkbox-inline,
.has-error.radio label,
.has-error.checkbox label,
.has-error.radio-inline label,
.has-error.checkbox-inline label {
  color: #a94442;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-error .form-control {
  border-color: #a94442;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-error .form-control:focus {
  border-color: #843534;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-error .input-group-addon {
  color: #a94442;
  border-color: #a94442;
  background-color: #f2dede;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_forms.scss */
.has-error .form-control-feedback {
  color: #a94442;
}

/* line 439, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.has-feedback label ~ .form-control-feedback {
  top: 25px;
}

/* line 442, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.has-feedback label.sr-only ~ .form-control-feedback {
  top: 0;
}

/* line 453, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.help-block {
  display: block;
  margin-top: 5px;
  margin-bottom: 10px;
  color: #737373;
}

@media (min-width: 768px) {
  /* line 478, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .form-group {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 485, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  /* line 492, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .form-control-static {
    display: inline-block;
  }
  /* line 496, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .input-group {
    display: inline-table;
    vertical-align: middle;
  }
  /* line 500, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .input-group .input-group-addon,
  .form-inline .input-group .input-group-btn,
  .form-inline .input-group .form-control {
    width: auto;
  }
  /* line 508, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .input-group > .form-control {
    width: 100%;
  }
  /* line 512, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .control-label {
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 519, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .radio,
  .form-inline .checkbox {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 526, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .radio label,
  .form-inline .checkbox label {
    padding-left: 0;
  }
  /* line 530, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .radio input[type="radio"],
  .form-inline .checkbox input[type="checkbox"] {
    position: relative;
    margin-left: 0;
  }
  /* line 537, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-inline .has-feedback .form-control-feedback {
    top: 0;
  }
}

/* line 559, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-horizontal .radio,
.form-horizontal .checkbox,
.form-horizontal .radio-inline,
.form-horizontal .checkbox-inline {
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 7px;
}

/* line 569, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-horizontal .radio,
.form-horizontal .checkbox {
  min-height: 27px;
}

/* line 575, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-horizontal .form-group {
  margin-left: -15px;
  margin-right: -15px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.form-horizontal .form-group:before, .form-horizontal .form-group:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.form-horizontal .form-group:after {
  clear: both;
}

@media (min-width: 768px) {
  /* line 582, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-horizontal .control-label {
    text-align: right;
    margin-bottom: 0;
    padding-top: 7px;
  }
}

/* line 593, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
.form-horizontal .has-feedback .form-control-feedback {
  right: 15px;
}

@media (min-width: 768px) {
  /* line 603, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-horizontal .form-group-lg .control-label {
    padding-top: 11px;
    font-size: 18px;
  }
}

@media (min-width: 768px) {
  /* line 611, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .form-horizontal .form-group-sm .control-label {
    padding-top: 6px;
    font-size: 12px;
  }
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn {
  display: inline-block;
  margin-bottom: 0;
  font-weight: normal;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  padding: 6px 12px;
  font-size: 14px;
  line-height: 1.42857;
  border-radius: 4px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn:focus, .btn.focus, .btn:active:focus, .btn:active.focus, .btn.active:focus, .btn.active.focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn:hover, .btn:focus, .btn.focus {
  color: #333;
  text-decoration: none;
}

/* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn:active, .btn.active {
  outline: 0;
  background-image: none;
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
}

/* line 46, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn.disabled, .btn[disabled],
fieldset[disabled] .btn {
  cursor: not-allowed;
  opacity: 0.65;
  filter: alpha(opacity=65);
  -webkit-box-shadow: none;
  box-shadow: none;
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none;
}

/* line 68, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-default {
  color: #333;
  background-color: #fff;
  border-color: #ccc;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default:focus, .btn-default.focus {
  color: #333;
  background-color: #e6e6e6;
  border-color: #8c8c8c;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default:hover {
  color: #333;
  background-color: #e6e6e6;
  border-color: #adadad;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default:active, .btn-default.active,
.open > .btn-default.dropdown-toggle {
  color: #333;
  background-color: #e6e6e6;
  border-color: #adadad;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default:active:hover, .btn-default:active:focus, .btn-default:active.focus, .btn-default.active:hover, .btn-default.active:focus, .btn-default.active.focus,
.open > .btn-default.dropdown-toggle:hover,
.open > .btn-default.dropdown-toggle:focus,
.open > .btn-default.dropdown-toggle.focus {
  color: #333;
  background-color: #d4d4d4;
  border-color: #8c8c8c;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default:active, .btn-default.active,
.open > .btn-default.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default.disabled:hover, .btn-default.disabled:focus, .btn-default.disabled.focus, .btn-default[disabled]:hover, .btn-default[disabled]:focus, .btn-default[disabled].focus,
fieldset[disabled] .btn-default:hover,
fieldset[disabled] .btn-default:focus,
fieldset[disabled] .btn-default.focus {
  background-color: #fff;
  border-color: #ccc;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-default .badge {
  color: #fff;
  background-color: #333;
}

/* line 71, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-primary {
  color: #fff;
  background-color: #337ab7;
  border-color: #2e6da4;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary:focus, .btn-primary.focus {
  color: #fff;
  background-color: #286090;
  border-color: #122b40;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary:hover {
  color: #fff;
  background-color: #286090;
  border-color: #204d74;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary:active, .btn-primary.active,
.open > .btn-primary.dropdown-toggle {
  color: #fff;
  background-color: #286090;
  border-color: #204d74;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary:active:hover, .btn-primary:active:focus, .btn-primary:active.focus, .btn-primary.active:hover, .btn-primary.active:focus, .btn-primary.active.focus,
.open > .btn-primary.dropdown-toggle:hover,
.open > .btn-primary.dropdown-toggle:focus,
.open > .btn-primary.dropdown-toggle.focus {
  color: #fff;
  background-color: #204d74;
  border-color: #122b40;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary:active, .btn-primary.active,
.open > .btn-primary.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary.disabled:hover, .btn-primary.disabled:focus, .btn-primary.disabled.focus, .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, .btn-primary[disabled].focus,
fieldset[disabled] .btn-primary:hover,
fieldset[disabled] .btn-primary:focus,
fieldset[disabled] .btn-primary.focus {
  background-color: #337ab7;
  border-color: #2e6da4;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-primary .badge {
  color: #337ab7;
  background-color: #fff;
}

/* line 75, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-success {
  color: #fff;
  background-color: #5cb85c;
  border-color: #4cae4c;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success:focus, .btn-success.focus {
  color: #fff;
  background-color: #449d44;
  border-color: #255625;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success:hover {
  color: #fff;
  background-color: #449d44;
  border-color: #398439;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success:active, .btn-success.active,
.open > .btn-success.dropdown-toggle {
  color: #fff;
  background-color: #449d44;
  border-color: #398439;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success:active:hover, .btn-success:active:focus, .btn-success:active.focus, .btn-success.active:hover, .btn-success.active:focus, .btn-success.active.focus,
.open > .btn-success.dropdown-toggle:hover,
.open > .btn-success.dropdown-toggle:focus,
.open > .btn-success.dropdown-toggle.focus {
  color: #fff;
  background-color: #398439;
  border-color: #255625;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success:active, .btn-success.active,
.open > .btn-success.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success.disabled:hover, .btn-success.disabled:focus, .btn-success.disabled.focus, .btn-success[disabled]:hover, .btn-success[disabled]:focus, .btn-success[disabled].focus,
fieldset[disabled] .btn-success:hover,
fieldset[disabled] .btn-success:focus,
fieldset[disabled] .btn-success.focus {
  background-color: #5cb85c;
  border-color: #4cae4c;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-success .badge {
  color: #5cb85c;
  background-color: #fff;
}

/* line 79, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-info {
  color: #fff;
  background-color: #5bc0de;
  border-color: #46b8da;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info:focus, .btn-info.focus {
  color: #fff;
  background-color: #31b0d5;
  border-color: #1b6d85;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info:hover {
  color: #fff;
  background-color: #31b0d5;
  border-color: #269abc;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info:active, .btn-info.active,
.open > .btn-info.dropdown-toggle {
  color: #fff;
  background-color: #31b0d5;
  border-color: #269abc;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info:active:hover, .btn-info:active:focus, .btn-info:active.focus, .btn-info.active:hover, .btn-info.active:focus, .btn-info.active.focus,
.open > .btn-info.dropdown-toggle:hover,
.open > .btn-info.dropdown-toggle:focus,
.open > .btn-info.dropdown-toggle.focus {
  color: #fff;
  background-color: #269abc;
  border-color: #1b6d85;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info:active, .btn-info.active,
.open > .btn-info.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info.disabled:hover, .btn-info.disabled:focus, .btn-info.disabled.focus, .btn-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled].focus,
fieldset[disabled] .btn-info:hover,
fieldset[disabled] .btn-info:focus,
fieldset[disabled] .btn-info.focus {
  background-color: #5bc0de;
  border-color: #46b8da;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-info .badge {
  color: #5bc0de;
  background-color: #fff;
}

/* line 83, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-warning {
  color: #fff;
  background-color: #f0ad4e;
  border-color: #eea236;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning:focus, .btn-warning.focus {
  color: #fff;
  background-color: #ec971f;
  border-color: #985f0d;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning:hover {
  color: #fff;
  background-color: #ec971f;
  border-color: #d58512;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning:active, .btn-warning.active,
.open > .btn-warning.dropdown-toggle {
  color: #fff;
  background-color: #ec971f;
  border-color: #d58512;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning:active:hover, .btn-warning:active:focus, .btn-warning:active.focus, .btn-warning.active:hover, .btn-warning.active:focus, .btn-warning.active.focus,
.open > .btn-warning.dropdown-toggle:hover,
.open > .btn-warning.dropdown-toggle:focus,
.open > .btn-warning.dropdown-toggle.focus {
  color: #fff;
  background-color: #d58512;
  border-color: #985f0d;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning:active, .btn-warning.active,
.open > .btn-warning.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning.disabled:hover, .btn-warning.disabled:focus, .btn-warning.disabled.focus, .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, .btn-warning[disabled].focus,
fieldset[disabled] .btn-warning:hover,
fieldset[disabled] .btn-warning:focus,
fieldset[disabled] .btn-warning.focus {
  background-color: #f0ad4e;
  border-color: #eea236;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-warning .badge {
  color: #f0ad4e;
  background-color: #fff;
}

/* line 87, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-danger {
  color: #fff;
  background-color: #d9534f;
  border-color: #d43f3a;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger:focus, .btn-danger.focus {
  color: #fff;
  background-color: #c9302c;
  border-color: #761c19;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger:hover {
  color: #fff;
  background-color: #c9302c;
  border-color: #ac2925;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger:active, .btn-danger.active,
.open > .btn-danger.dropdown-toggle {
  color: #fff;
  background-color: #c9302c;
  border-color: #ac2925;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger:active:hover, .btn-danger:active:focus, .btn-danger:active.focus, .btn-danger.active:hover, .btn-danger.active:focus, .btn-danger.active.focus,
.open > .btn-danger.dropdown-toggle:hover,
.open > .btn-danger.dropdown-toggle:focus,
.open > .btn-danger.dropdown-toggle.focus {
  color: #fff;
  background-color: #ac2925;
  border-color: #761c19;
}

/* line 37, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger:active, .btn-danger.active,
.open > .btn-danger.dropdown-toggle {
  background-image: none;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger.disabled:hover, .btn-danger.disabled:focus, .btn-danger.disabled.focus, .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-danger[disabled].focus,
fieldset[disabled] .btn-danger:hover,
fieldset[disabled] .btn-danger:focus,
fieldset[disabled] .btn-danger.focus {
  background-color: #d9534f;
  border-color: #d43f3a;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_buttons.scss */
.btn-danger .badge {
  color: #d9534f;
  background-color: #fff;
}

/* line 96, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-link {
  color: #337ab7;
  font-weight: normal;
  border-radius: 0;
}

/* line 101, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-link, .btn-link:active, .btn-link.active, .btn-link[disabled],
fieldset[disabled] .btn-link {
  background-color: transparent;
  -webkit-box-shadow: none;
  box-shadow: none;
}

/* line 109, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active {
  border-color: transparent;
}

/* line 115, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-link:hover, .btn-link:focus {
  color: #23527c;
  text-decoration: underline;
  background-color: transparent;
}

/* line 123, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-link[disabled]:hover, .btn-link[disabled]:focus,
fieldset[disabled] .btn-link:hover,
fieldset[disabled] .btn-link:focus {
  color: #777777;
  text-decoration: none;
}

/* line 135, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-lg, .btn-group-lg > .btn {
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.33333;
  border-radius: 6px;
}

/* line 139, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-sm, .btn-group-sm > .btn {
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}

/* line 143, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-xs, .btn-group-xs > .btn {
  padding: 1px 5px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}

/* line 151, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-block {
  display: block;
  width: 100%;
}

/* line 157, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
.btn-block + .btn-block {
  margin-top: 5px;
}

/* line 165, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_buttons.scss */
input[type="submit"].btn-block,
input[type="reset"].btn-block,
input[type="button"].btn-block {
  width: 100%;
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
.fade {
  opacity: 0;
  -webkit-transition: opacity 0.15s linear;
  -o-transition: opacity 0.15s linear;
  transition: opacity 0.15s linear;
}

/* line 13, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
.fade.in {
  opacity: 1;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
.collapse {
  display: none;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
.collapse.in {
  display: block;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
tr.collapse.in {
  display: table-row;
}

/* line 28, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
tbody.collapse.in {
  display: table-row-group;
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_component-animations.scss */
.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  -webkit-transition-property: height, visibility;
  transition-property: height, visibility;
  -webkit-transition-duration: 0.35s;
  transition-duration: 0.35s;
  -webkit-transition-timing-function: ease;
  transition-timing-function: ease;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px dashed;
  border-top: 4px solid \9;
  border-right: 4px solid transparent;
  border-left: 4px solid transparent;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropup,
.dropdown {
  position: relative;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-toggle:focus {
  outline: 0;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0;
  list-style: none;
  font-size: 14px;
  text-align: left;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  background-clip: padding-box;
}

/* line 54, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu.pull-right {
  right: 0;
  left: auto;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu .divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #e5e5e5;
}

/* line 65, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu > li > a {
  display: block;
  padding: 3px 20px;
  clear: both;
  font-weight: normal;
  line-height: 1.42857;
  color: #333333;
  white-space: nowrap;
}

/* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {
  text-decoration: none;
  color: #262626;
  background-color: #f5f5f5;
}

/* line 88, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {
  color: #fff;
  text-decoration: none;
  outline: 0;
  background-color: #337ab7;
}

/* line 103, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  color: #777777;
}

/* line 110, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  background-color: transparent;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
  cursor: not-allowed;
}

/* line 123, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.open > .dropdown-menu {
  display: block;
}

/* line 128, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.open > a {
  outline: 0;
}

/* line 137, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu-right {
  left: auto;
  right: 0;
}

/* line 147, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-menu-left {
  left: 0;
  right: auto;
}

/* line 153, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: 12px;
  line-height: 1.42857;
  color: #777777;
  white-space: nowrap;
}

/* line 163, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: 990;
}

/* line 173, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

/* line 186, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropup .caret,
.navbar-fixed-bottom .dropdown .caret {
  border-top: 0;
  border-bottom: 4px dashed;
  border-bottom: 4px solid \9;
  content: "";
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
.dropup .dropdown-menu,
.navbar-fixed-bottom .dropdown .dropdown-menu {
  top: auto;
  bottom: 100%;
  margin-bottom: 2px;
}

@media (min-width: 768px) {
  /* line 207, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
  .navbar-right .dropdown-menu {
    right: 0;
    left: auto;
  }
  /* line 212, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_dropdowns.scss */
  .navbar-right .dropdown-menu-left {
    left: 0;
    right: auto;
  }
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-block;
  vertical-align: middle;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn,
.btn-group-vertical > .btn {
  position: relative;
  float: left;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,
.btn-group-vertical > .btn:hover,
.btn-group-vertical > .btn:focus,
.btn-group-vertical > .btn:active,
.btn-group-vertical > .btn.active {
  z-index: 2;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group .btn + .btn,
.btn-group .btn + .btn-group,
.btn-group .btn-group + .btn,
.btn-group .btn-group + .btn-group {
  margin-left: -1px;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-toolbar {
  margin-left: -5px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.btn-toolbar:before, .btn-toolbar:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.btn-toolbar:after {
  clear: both;
}

/* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-toolbar .btn,
.btn-toolbar .btn-group,
.btn-toolbar .input-group {
  float: left;
}

/* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-toolbar > .btn,
.btn-toolbar > .btn-group,
.btn-toolbar > .input-group {
  margin-left: 5px;
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
  border-radius: 0;
}

/* line 56, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn:first-child {
  margin-left: 0;
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

/* line 69, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn-group {
  float: left;
}

/* line 72, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,
.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

/* line 86, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
  outline: 0;
}

/* line 105, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn + .dropdown-toggle {
  padding-left: 8px;
  padding-right: 8px;
}

/* line 109, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group > .btn-lg + .dropdown-toggle, .btn-group-lg.btn-group > .btn + .dropdown-toggle {
  padding-left: 12px;
  padding-right: 12px;
}

/* line 116, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group.open .dropdown-toggle {
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
}

/* line 120, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group.open .dropdown-toggle.btn-link {
  -webkit-box-shadow: none;
  box-shadow: none;
}

/* line 127, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn .caret {
  margin-left: 0;
}

/* line 131, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-lg .caret, .btn-group-lg > .btn .caret {
  border-width: 5px 5px 0;
  border-bottom-width: 0;
}

/* line 136, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.dropup .btn-lg .caret, .dropup .btn-group-lg > .btn .caret {
  border-width: 0 5px 5px;
}

/* line 145, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn,
.btn-group-vertical > .btn-group,
.btn-group-vertical > .btn-group > .btn {
  display: block;
  float: none;
  width: 100%;
  max-width: 100%;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.btn-group-vertical > .btn-group:before, .btn-group-vertical > .btn-group:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.btn-group-vertical > .btn-group:after {
  clear: both;
}

/* line 157, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn-group > .btn {
  float: none;
}

/* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn + .btn,
.btn-group-vertical > .btn + .btn-group,
.btn-group-vertical > .btn-group + .btn,
.btn-group-vertical > .btn-group + .btn-group {
  margin-top: -1px;
  margin-left: 0;
}

/* line 172, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn:not(:first-child):not(:last-child) {
  border-radius: 0;
}

/* line 175, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn:first-child:not(:last-child) {
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

/* line 179, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn:last-child:not(:first-child) {
  border-top-right-radius: 0;
  border-top-left-radius: 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
}

/* line 184, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}

/* line 188, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,
.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}

/* line 201, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-justified {
  display: table;
  width: 100%;
  table-layout: fixed;
  border-collapse: separate;
}

/* line 206, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-justified > .btn,
.btn-group-justified > .btn-group {
  float: none;
  display: table-cell;
  width: 1%;
}

/* line 212, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-justified > .btn-group .btn {
  width: 100%;
}

/* line 216, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
.btn-group-justified > .btn-group .dropdown-menu {
  left: auto;
}

/* line 237, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_button-groups.scss */
[data-toggle="buttons"] > .btn input[type="radio"],
[data-toggle="buttons"] > .btn input[type="checkbox"],
[data-toggle="buttons"] > .btn-group > .btn input[type="radio"],
[data-toggle="buttons"] > .btn-group > .btn input[type="checkbox"] {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group {
  position: relative;
  display: table;
  border-collapse: separate;
}

/* line 13, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group[class*="col-"] {
  float: none;
  padding-left: 0;
  padding-right: 0;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group .form-control {
  position: relative;
  z-index: 2;
  float: left;
  width: 100%;
  margin-bottom: 0;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group .form-control:focus {
  z-index: 3;
}

/* line 58, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon,
.input-group-btn,
.input-group .form-control {
  display: table-cell;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon:not(:first-child):not(:last-child),
.input-group-btn:not(:first-child):not(:last-child),
.input-group .form-control:not(:first-child):not(:last-child) {
  border-radius: 0;
}

/* line 68, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon,
.input-group-btn {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle;
}

/* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon {
  padding: 6px 12px;
  font-size: 14px;
  font-weight: normal;
  line-height: 1;
  color: #555555;
  text-align: center;
  background-color: #eeeeee;
  border: 1px solid #ccc;
  border-radius: 4px;
}

/* line 89, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon.input-sm,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .input-group-addon.btn {
  padding: 5px 10px;
  font-size: 12px;
  border-radius: 3px;
}

/* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon.input-lg,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .input-group-addon.btn {
  padding: 10px 16px;
  font-size: 18px;
  border-radius: 6px;
}

/* line 101, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon input[type="radio"],
.input-group-addon input[type="checkbox"] {
  margin-top: 0;
}

/* line 108, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

/* line 117, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon:first-child {
  border-right: 0;
}

/* line 120, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

/* line 129, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-addon:last-child {
  border-left: 0;
}

/* line 135, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn {
  position: relative;
  font-size: 0;
  white-space: nowrap;
}

/* line 144, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn > .btn {
  position: relative;
}

/* line 146, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn > .btn + .btn {
  margin-left: -1px;
}

/* line 150, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn > .btn:hover, .input-group-btn > .btn:focus, .input-group-btn > .btn:active {
  z-index: 2;
}

/* line 159, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group {
  margin-right: -1px;
}

/* line 165, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_input-groups.scss */
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group {
  z-index: 2;
  margin-left: -1px;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav {
  margin-bottom: 0;
  padding-left: 0;
  list-style: none;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.nav:before, .nav:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.nav:after {
  clear: both;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li {
  position: relative;
  display: block;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li > a {
  position: relative;
  display: block;
  padding: 10px 15px;
}

/* line 23, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li > a:hover, .nav > li > a:focus {
  text-decoration: none;
  background-color: #eeeeee;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li.disabled > a {
  color: #777777;
}

/* line 34, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li.disabled > a:hover, .nav > li.disabled > a:focus {
  color: #777777;
  text-decoration: none;
  background-color: transparent;
  cursor: not-allowed;
}

/* line 46, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav .open > a, .nav .open > a:hover, .nav .open > a:focus {
  background-color: #eeeeee;
  border-color: #337ab7;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav .nav-divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #e5e5e5;
}

/* line 66, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav > li > a > img {
  max-width: none;
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs {
  border-bottom: 1px solid #ddd;
}

/* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs > li {
  float: left;
  margin-bottom: -1px;
}

/* line 84, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs > li > a {
  margin-right: 2px;
  line-height: 1.42857;
  border: 1px solid transparent;
  border-radius: 4px 4px 0 0;
}

/* line 89, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs > li > a:hover {
  border-color: #eeeeee #eeeeee #ddd;
}

/* line 96, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
  color: #555555;
  background-color: #fff;
  border: 1px solid #ddd;
  border-bottom-color: transparent;
  cursor: default;
}

/* line 118, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-pills > li {
  float: left;
}

/* line 122, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-pills > li > a {
  border-radius: 4px;
}

/* line 125, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-pills > li + li {
  margin-left: 2px;
}

/* line 131, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {
  color: #fff;
  background-color: #337ab7;
}

/* line 144, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-stacked > li {
  float: none;
}

/* line 146, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-stacked > li + li {
  margin-top: 2px;
  margin-left: 0;
}

/* line 160, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-justified, .nav-tabs.nav-justified {
  width: 100%;
}

/* line 163, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-justified > li, .nav-tabs.nav-justified > li {
  float: none;
}

/* line 165, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-justified > li > a, .nav-tabs.nav-justified > li > a {
  text-align: center;
  margin-bottom: 5px;
}

/* line 171, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-justified > .dropdown .dropdown-menu {
  top: auto;
  left: auto;
}

@media (min-width: 768px) {
  /* line 177, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
  .nav-justified > li, .nav-tabs.nav-justified > li {
    display: table-cell;
    width: 1%;
  }
  /* line 180, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
  .nav-justified > li > a, .nav-tabs.nav-justified > li > a {
    margin-bottom: 0;
  }
}

/* line 190, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs-justified, .nav-tabs.nav-justified {
  border-bottom: 0;
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {
  margin-right: 0;
  border-radius: 4px;
}

/* line 199, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,
.nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,
.nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {
  border: 1px solid #ddd;
}

@media (min-width: 768px) {
  /* line 206, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a {
    border-bottom: 1px solid #ddd;
    border-radius: 4px 4px 0 0;
  }
  /* line 210, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,
  .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active > a:hover,
  .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:focus {
    border-bottom-color: #fff;
  }
}

/* line 224, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.tab-content > .tab-pane {
  display: none;
}

/* line 227, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.tab-content > .active {
  display: block;
}

/* line 237, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navs.scss */
.nav-tabs .dropdown-menu {
  margin-top: -1px;
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar {
  position: relative;
  min-height: 50px;
  margin-bottom: 20px;
  border: 1px solid transparent;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar:before, .navbar:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar:after {
  clear: both;
}

@media (min-width: 768px) {
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar {
    border-radius: 4px;
  }
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar-header:before, .navbar-header:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar-header:after {
  clear: both;
}

@media (min-width: 768px) {
  /* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-header {
    float: left;
  }
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-collapse {
  overflow-x: visible;
  padding-right: 15px;
  padding-left: 15px;
  border-top: 1px solid transparent;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
  -webkit-overflow-scrolling: touch;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar-collapse:before, .navbar-collapse:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.navbar-collapse:after {
  clear: both;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-collapse.in {
  overflow-y: auto;
}

@media (min-width: 768px) {
  /* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-collapse {
    width: auto;
    border-top: 0;
    box-shadow: none;
  }
  /* line 68, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-collapse.collapse {
    display: block !important;
    height: auto !important;
    padding-bottom: 0;
    overflow: visible !important;
  }
  /* line 75, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-collapse.in {
    overflow-y: visible;
  }
  /* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-fixed-top .navbar-collapse,
  .navbar-static-top .navbar-collapse,
  .navbar-fixed-bottom .navbar-collapse {
    padding-left: 0;
    padding-right: 0;
  }
}

/* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-fixed-top .navbar-collapse,
.navbar-fixed-bottom .navbar-collapse {
  max-height: 340px;
}

@media (max-device-width: 480px) and (orientation: landscape) {
  /* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-fixed-top .navbar-collapse,
  .navbar-fixed-bottom .navbar-collapse {
    max-height: 200px;
  }
}

/* line 108, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.container > .navbar-header,
.container > .navbar-collapse,
.container-fluid > .navbar-header,
.container-fluid > .navbar-collapse {
  margin-right: -15px;
  margin-left: -15px;
}

@media (min-width: 768px) {
  /* line 108, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .container > .navbar-header,
  .container > .navbar-collapse,
  .container-fluid > .navbar-header,
  .container-fluid > .navbar-collapse {
    margin-right: 0;
    margin-left: 0;
  }
}

/* line 128, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-static-top {
  z-index: 1000;
  border-width: 0 0 1px;
}

@media (min-width: 768px) {
  /* line 128, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-static-top {
    border-radius: 0;
  }
}

/* line 138, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-fixed-top,
.navbar-fixed-bottom {
  position: fixed;
  right: 0;
  left: 0;
  z-index: 1030;
}

@media (min-width: 768px) {
  /* line 138, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-fixed-top,
  .navbar-fixed-bottom {
    border-radius: 0;
  }
}

/* line 150, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-fixed-top {
  top: 0;
  border-width: 0 0 1px;
}

/* line 154, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-fixed-bottom {
  bottom: 0;
  margin-bottom: 0;
  border-width: 1px 0 0;
}

/* line 163, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-brand {
  float: left;
  padding: 15px 15px;
  font-size: 18px;
  line-height: 20px;
  height: 50px;
}

/* line 170, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-brand:hover, .navbar-brand:focus {
  text-decoration: none;
}

/* line 175, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-brand > img {
  display: block;
}

@media (min-width: 768px) {
  /* line 180, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar > .container .navbar-brand,
  .navbar > .container-fluid .navbar-brand {
    margin-left: -15px;
  }
}

/* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-toggle {
  position: relative;
  float: right;
  margin-right: 15px;
  padding: 9px 10px;
  margin-top: 8px;
  margin-bottom: 8px;
  background-color: transparent;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
}

/* line 206, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-toggle:focus {
  outline: 0;
}

/* line 211, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-toggle .icon-bar {
  display: block;
  width: 22px;
  height: 2px;
  border-radius: 1px;
}

/* line 217, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-toggle .icon-bar + .icon-bar {
  margin-top: 4px;
}

@media (min-width: 768px) {
  /* line 193, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-toggle {
    display: none;
  }
}

/* line 232, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-nav {
  margin: 7.5px -15px;
}

/* line 235, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-nav > li > a {
  padding-top: 10px;
  padding-bottom: 10px;
  line-height: 20px;
}

@media (max-width: 767px) {
  /* line 243, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav .open .dropdown-menu {
    position: static;
    float: none;
    width: auto;
    margin-top: 0;
    background-color: transparent;
    border: 0;
    box-shadow: none;
  }
  /* line 251, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav .open .dropdown-menu > li > a,
  .navbar-nav .open .dropdown-menu .dropdown-header {
    padding: 5px 15px 5px 25px;
  }
  /* line 255, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav .open .dropdown-menu > li > a {
    line-height: 20px;
  }
  /* line 257, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropdown-menu > li > a:focus {
    background-image: none;
  }
}

@media (min-width: 768px) {
  /* line 232, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav {
    float: left;
    margin: 0;
  }
  /* line 270, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav > li {
    float: left;
  }
  /* line 272, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-nav > li > a {
    padding-top: 15px;
    padding-bottom: 15px;
  }
}

/* line 286, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-form {
  margin-left: -15px;
  margin-right: -15px;
  padding: 10px 15px;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);
  margin-top: 8px;
  margin-bottom: 8px;
}

@media (min-width: 768px) {
  /* line 478, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .form-group {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 485, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  /* line 492, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .form-control-static {
    display: inline-block;
  }
  /* line 496, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .input-group {
    display: inline-table;
    vertical-align: middle;
  }
  /* line 500, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .input-group .input-group-addon,
  .navbar-form .input-group .input-group-btn,
  .navbar-form .input-group .form-control {
    width: auto;
  }
  /* line 508, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .input-group > .form-control {
    width: 100%;
  }
  /* line 512, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .control-label {
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 519, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .radio,
  .navbar-form .checkbox {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;
    vertical-align: middle;
  }
  /* line 526, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .radio label,
  .navbar-form .checkbox label {
    padding-left: 0;
  }
  /* line 530, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .radio input[type="radio"],
  .navbar-form .checkbox input[type="checkbox"] {
    position: relative;
    margin-left: 0;
  }
  /* line 537, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_forms.scss */
  .navbar-form .has-feedback .form-control-feedback {
    top: 0;
  }
}

@media (max-width: 767px) {
  /* line 298, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-form .form-group {
    margin-bottom: 5px;
  }
  /* line 302, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-form .form-group:last-child {
    margin-bottom: 0;
  }
}

@media (min-width: 768px) {
  /* line 286, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-form {
    width: auto;
    border: 0;
    margin-left: 0;
    margin-right: 0;
    padding-top: 0;
    padding-bottom: 0;
    -webkit-box-shadow: none;
    box-shadow: none;
  }
}

/* line 327, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-nav > li > .dropdown-menu {
  margin-top: 0;
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}

/* line 332, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
  margin-bottom: 0;
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

/* line 343, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-btn {
  margin-top: 8px;
  margin-bottom: 8px;
}

/* line 346, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-btn.btn-sm, .btn-group-sm > .navbar-btn.btn {
  margin-top: 10px;
  margin-bottom: 10px;
}

/* line 349, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-btn.btn-xs, .btn-group-xs > .navbar-btn.btn {
  margin-top: 14px;
  margin-bottom: 14px;
}

/* line 359, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-text {
  margin-top: 15px;
  margin-bottom: 15px;
}

@media (min-width: 768px) {
  /* line 359, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-text {
    float: left;
    margin-left: 15px;
    margin-right: 15px;
  }
}

@media (min-width: 768px) {
  /* line 379, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-left {
    float: left !important;
  }
  /* line 382, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-right {
    float: right !important;
    margin-right: -15px;
  }
  /* line 386, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-right ~ .navbar-right {
    margin-right: 0;
  }
}

/* line 397, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default {
  background-color: #f8f8f8;
  border-color: #e7e7e7;
}

/* line 401, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-brand {
  color: #777;
}

/* line 403, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus {
  color: #5e5e5e;
  background-color: transparent;
}

/* line 410, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-text {
  color: #777;
}

/* line 415, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-nav > li > a {
  color: #777;
}

/* line 418, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus {
  color: #333;
  background-color: transparent;
}

/* line 425, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {
  color: #555;
  background-color: #e7e7e7;
}

/* line 433, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > .disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus {
  color: #ccc;
  background-color: transparent;
}

/* line 442, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-toggle {
  border-color: #ddd;
}

/* line 444, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus {
  background-color: #ddd;
}

/* line 448, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-toggle .icon-bar {
  background-color: #888;
}

/* line 453, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-collapse,
.navbar-default .navbar-form {
  border-color: #e7e7e7;
}

/* line 462, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {
  background-color: #e7e7e7;
  color: #555;
}

@media (max-width: 767px) {
  /* line 473, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-default .navbar-nav .open .dropdown-menu > li > a {
    color: #777;
  }
  /* line 475, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {
    color: #333;
    background-color: transparent;
  }
  /* line 482, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #555;
    background-color: #e7e7e7;
  }
  /* line 490, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus {
    color: #ccc;
    background-color: transparent;
  }
}

/* line 506, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-link {
  color: #777;
}

/* line 508, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .navbar-link:hover {
  color: #333;
}

/* line 513, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .btn-link {
  color: #777;
}

/* line 515, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .btn-link:hover, .navbar-default .btn-link:focus {
  color: #333;
}

/* line 521, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-default .btn-link[disabled]:hover, .navbar-default .btn-link[disabled]:focus,
fieldset[disabled] .navbar-default .btn-link:hover,
fieldset[disabled] .navbar-default .btn-link:focus {
  color: #ccc;
}

/* line 531, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse {
  background-color: #222;
  border-color: #090909;
}

/* line 535, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-brand {
  color: #9d9d9d;
}

/* line 537, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus {
  color: #fff;
  background-color: transparent;
}

/* line 544, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-text {
  color: #9d9d9d;
}

/* line 549, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-nav > li > a {
  color: #9d9d9d;
}

/* line 552, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > li > a:focus {
  color: #fff;
  background-color: transparent;
}

/* line 559, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .active > a:hover, .navbar-inverse .navbar-nav > .active > a:focus {
  color: #fff;
  background-color: #090909;
}

/* line 567, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > .disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus {
  color: #444;
  background-color: transparent;
}

/* line 577, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-toggle {
  border-color: #333;
}

/* line 579, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus {
  background-color: #333;
}

/* line 583, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-toggle .icon-bar {
  background-color: #fff;
}

/* line 588, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-collapse,
.navbar-inverse .navbar-form {
  border-color: #101010;
}

/* line 596, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .open > a:hover, .navbar-inverse .navbar-nav > .open > a:focus {
  background-color: #090909;
  color: #fff;
}

@media (max-width: 767px) {
  /* line 607, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {
    border-color: #090909;
  }
  /* line 610, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider {
    background-color: #090909;
  }
  /* line 613, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {
    color: #9d9d9d;
  }
  /* line 615, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {
    color: #fff;
    background-color: transparent;
  }
  /* line 622, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #fff;
    background-color: #090909;
  }
  /* line 630, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus {
    color: #444;
    background-color: transparent;
  }
}

/* line 641, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-link {
  color: #9d9d9d;
}

/* line 643, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .navbar-link:hover {
  color: #fff;
}

/* line 648, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .btn-link {
  color: #9d9d9d;
}

/* line 650, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .btn-link:hover, .navbar-inverse .btn-link:focus {
  color: #fff;
}

/* line 656, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_navbar.scss */
.navbar-inverse .btn-link[disabled]:hover, .navbar-inverse .btn-link[disabled]:focus,
fieldset[disabled] .navbar-inverse .btn-link:hover,
fieldset[disabled] .navbar-inverse .btn-link:focus {
  color: #444;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_breadcrumbs.scss */
.breadcrumb {
  padding: 8px 15px;
  margin-bottom: 20px;
  list-style: none;
  background-color: #f5f5f5;
  border-radius: 4px;
}

/* line 13, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_breadcrumbs.scss */
.breadcrumb > li {
  display: inline-block;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_breadcrumbs.scss */
.breadcrumb > li + li:before {
  content: "/ ";
  padding: 0 5px;
  color: #ccc;
}

/* line 25, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_breadcrumbs.scss */
.breadcrumb > .active {
  color: #777777;
}

/* line 4, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination {
  display: inline-block;
  padding-left: 0;
  margin: 20px 0;
  border-radius: 4px;
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > li {
  display: inline;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > li > a,
.pagination > li > span {
  position: relative;
  float: left;
  padding: 6px 12px;
  line-height: 1.42857;
  text-decoration: none;
  color: #337ab7;
  background-color: #fff;
  border: 1px solid #ddd;
  margin-left: -1px;
}

/* line 25, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > li:first-child > a,
.pagination > li:first-child > span {
  margin-left: 0;
  border-bottom-left-radius: 4px;
  border-top-left-radius: 4px;
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > li:last-child > a,
.pagination > li:last-child > span {
  border-bottom-right-radius: 4px;
  border-top-right-radius: 4px;
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > li > a:hover, .pagination > li > a:focus,
.pagination > li > span:hover,
.pagination > li > span:focus {
  z-index: 2;
  color: #23527c;
  background-color: #eeeeee;
  border-color: #ddd;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > .active > a, .pagination > .active > a:hover, .pagination > .active > a:focus,
.pagination > .active > span,
.pagination > .active > span:hover,
.pagination > .active > span:focus {
  z-index: 3;
  color: #fff;
  background-color: #337ab7;
  border-color: #337ab7;
  cursor: default;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pagination.scss */
.pagination > .disabled > span,
.pagination > .disabled > span:hover,
.pagination > .disabled > span:focus,
.pagination > .disabled > a,
.pagination > .disabled > a:hover,
.pagination > .disabled > a:focus {
  color: #777777;
  background-color: #fff;
  border-color: #ddd;
  cursor: not-allowed;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-lg > li > a,
.pagination-lg > li > span {
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.33333;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-lg > li:first-child > a,
.pagination-lg > li:first-child > span {
  border-bottom-left-radius: 6px;
  border-top-left-radius: 6px;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-lg > li:last-child > a,
.pagination-lg > li:last-child > span {
  border-bottom-right-radius: 6px;
  border-top-right-radius: 6px;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-sm > li > a,
.pagination-sm > li > span {
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-sm > li:first-child > a,
.pagination-sm > li:first-child > span {
  border-bottom-left-radius: 3px;
  border-top-left-radius: 3px;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_pagination.scss */
.pagination-sm > li:last-child > a,
.pagination-sm > li:last-child > span {
  border-bottom-right-radius: 3px;
  border-top-right-radius: 3px;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager {
  padding-left: 0;
  margin: 20px 0;
  list-style: none;
  text-align: center;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.pager:before, .pager:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.pager:after {
  clear: both;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager li {
  display: inline;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager li > a,
.pager li > span {
  display: inline-block;
  padding: 5px 14px;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 15px;
}

/* line 23, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager li > a:hover,
.pager li > a:focus {
  text-decoration: none;
  background-color: #eeeeee;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager .next > a,
.pager .next > span {
  float: right;
}

/* line 38, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager .previous > a,
.pager .previous > span {
  float: left;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_pager.scss */
.pager .disabled > a,
.pager .disabled > a:hover,
.pager .disabled > a:focus,
.pager .disabled > span {
  color: #777777;
  background-color: #fff;
  cursor: not-allowed;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label {
  display: inline;
  padding: .2em .6em .3em;
  font-size: 75%;
  font-weight: bold;
  line-height: 1;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: .25em;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label:empty {
  display: none;
}

/* line 25, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.btn .label {
  position: relative;
  top: -1px;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
a.label:hover, a.label:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}

/* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-default {
  background-color: #777777;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-default[href]:hover, .label-default[href]:focus {
  background-color: #5e5e5e;
}

/* line 48, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-primary {
  background-color: #337ab7;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-primary[href]:hover, .label-primary[href]:focus {
  background-color: #286090;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-success {
  background-color: #5cb85c;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-success[href]:hover, .label-success[href]:focus {
  background-color: #449d44;
}

/* line 56, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-info {
  background-color: #5bc0de;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-info[href]:hover, .label-info[href]:focus {
  background-color: #31b0d5;
}

/* line 60, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-warning {
  background-color: #f0ad4e;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-warning[href]:hover, .label-warning[href]:focus {
  background-color: #ec971f;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_labels.scss */
.label-danger {
  background-color: #d9534f;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_labels.scss */
.label-danger[href]:hover, .label-danger[href]:focus {
  background-color: #c9302c;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.badge {
  display: inline-block;
  min-width: 10px;
  padding: 3px 7px;
  font-size: 12px;
  font-weight: bold;
  color: #fff;
  line-height: 1;
  vertical-align: middle;
  white-space: nowrap;
  text-align: center;
  background-color: #777777;
  border-radius: 10px;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.badge:empty {
  display: none;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.btn .badge {
  position: relative;
  top: -1px;
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.btn-xs .badge, .btn-group-xs > .btn .badge,
.btn-group-xs > .btn .badge {
  top: 0;
  padding: 1px 5px;
}

/* line 41, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.list-group-item.active > .badge,
.nav-pills > .active > a > .badge {
  color: #337ab7;
  background-color: #fff;
}

/* line 47, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.list-group-item > .badge {
  float: right;
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.list-group-item > .badge + .badge {
  margin-right: 5px;
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
.nav-pills > li > a > .badge {
  margin-left: 3px;
}

/* line 62, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_badges.scss */
a.badge:hover, a.badge:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.jumbotron {
  padding-top: 30px;
  padding-bottom: 30px;
  margin-bottom: 30px;
  color: inherit;
  background-color: #eeeeee;
}

/* line 13, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.jumbotron h1,
.jumbotron .h1 {
  color: inherit;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.jumbotron p {
  margin-bottom: 15px;
  font-size: 21px;
  font-weight: 200;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.jumbotron > hr {
  border-top-color: #d5d5d5;
}

/* line 28, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.container .jumbotron,
.container-fluid .jumbotron {
  border-radius: 6px;
  padding-left: 15px;
  padding-right: 15px;
}

/* line 35, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
.jumbotron .container {
  max-width: 100%;
}

@media screen and (min-width: 768px) {
  /* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
  .jumbotron {
    padding-top: 48px;
    padding-bottom: 48px;
  }
  /* line 43, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
  .container .jumbotron,
  .container-fluid .jumbotron {
    padding-left: 60px;
    padding-right: 60px;
  }
  /* line 49, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_jumbotron.scss */
  .jumbotron h1,
  .jumbotron .h1 {
    font-size: 63px;
  }
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_thumbnails.scss */
.thumbnail {
  display: block;
  padding: 4px;
  margin-bottom: 20px;
  line-height: 1.42857;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  -webkit-transition: border 0.2s ease-in-out;
  -o-transition: border 0.2s ease-in-out;
  transition: border 0.2s ease-in-out;
}

/* line 17, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_thumbnails.scss */
.thumbnail > img,
.thumbnail a > img {
  display: block;
  max-width: 100%;
  height: auto;
  margin-left: auto;
  margin-right: auto;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_thumbnails.scss */
.thumbnail .caption {
  padding: 9px;
  color: #333333;
}

/* line 34, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_thumbnails.scss */
a.thumbnail:hover,
a.thumbnail:focus,
a.thumbnail.active {
  border-color: #337ab7;
}

/* line 9, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid transparent;
  border-radius: 4px;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert h4 {
  margin-top: 0;
  color: inherit;
}

/* line 23, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert .alert-link {
  font-weight: bold;
}

/* line 28, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert > p,
.alert > ul {
  margin-bottom: 0;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert > p + p {
  margin-top: 5px;
}

/* line 42, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-dismissable,
.alert-dismissible {
  padding-right: 35px;
}

/* line 47, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-dismissable .close,
.alert-dismissible .close {
  position: relative;
  top: -2px;
  right: -21px;
  color: inherit;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-success {
  background-color: #dff0d8;
  border-color: #d6e9c6;
  color: #3c763d;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-success hr {
  border-top-color: #c9e2b3;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-success .alert-link {
  color: #2b542c;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-info {
  background-color: #d9edf7;
  border-color: #bce8f1;
  color: #31708f;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-info hr {
  border-top-color: #a6e1ec;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-info .alert-link {
  color: #245269;
}

/* line 67, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-warning {
  background-color: #fcf8e3;
  border-color: #faebcc;
  color: #8a6d3b;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-warning hr {
  border-top-color: #f7e1b5;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-warning .alert-link {
  color: #66512c;
}

/* line 71, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_alerts.scss */
.alert-danger {
  background-color: #f2dede;
  border-color: #ebccd1;
  color: #a94442;
}

/* line 8, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-danger hr {
  border-top-color: #e4b9c0;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_alerts.scss */
.alert-danger .alert-link {
  color: #843534;
}

@-webkit-keyframes progress-bar-stripes {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}

@keyframes progress-bar-stripes {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress {
  overflow: hidden;
  height: 20px;
  margin-bottom: 20px;
  background-color: #f5f5f5;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-bar {
  float: left;
  width: 0%;
  height: 100%;
  font-size: 12px;
  line-height: 20px;
  color: #fff;
  text-align: center;
  background-color: #337ab7;
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);
  -webkit-transition: width 0.6s ease;
  -o-transition: width 0.6s ease;
  transition: width 0.6s ease;
}

/* line 54, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-striped .progress-bar,
.progress-bar-striped {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-size: 40px 40px;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress.active .progress-bar,
.progress-bar.active {
  -webkit-animation: progress-bar-stripes 2s linear infinite;
  -o-animation: progress-bar-stripes 2s linear infinite;
  animation: progress-bar-stripes 2s linear infinite;
}

/* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-bar-success {
  background-color: #5cb85c;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_progress-bar.scss */
.progress-striped .progress-bar-success {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
}

/* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-bar-info {
  background-color: #5bc0de;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_progress-bar.scss */
.progress-striped .progress-bar-info {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-bar-warning {
  background-color: #f0ad4e;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_progress-bar.scss */
.progress-striped .progress-bar-warning {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
}

/* line 85, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_progress-bars.scss */
.progress-bar-danger {
  background-color: #d9534f;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_progress-bar.scss */
.progress-striped .progress-bar-danger {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
}

/* line 1, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media {
  margin-top: 15px;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media:first-child {
  margin-top: 0;
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media,
.media-body {
  zoom: 1;
  overflow: hidden;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-body {
  width: 10000px;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-object {
  display: block;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-object.img-thumbnail {
  max-width: none;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-right,
.media > .pull-right {
  padding-left: 10px;
}

/* line 34, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-left,
.media > .pull-left {
  padding-right: 10px;
}

/* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-left,
.media-right,
.media-body {
  display: table-cell;
  vertical-align: top;
}

/* line 46, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-middle {
  vertical-align: middle;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-bottom {
  vertical-align: bottom;
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-heading {
  margin-top: 0;
  margin-bottom: 5px;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_media.scss */
.media-list {
  padding-left: 0;
  list-style: none;
}

/* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group {
  margin-bottom: 20px;
  padding-left: 0;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item {
  position: relative;
  display: block;
  padding: 10px 15px;
  margin-bottom: -1px;
  background-color: #fff;
  border: 1px solid #ddd;
}

/* line 31, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item:first-child {
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
}

/* line 34, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item:last-child {
  margin-bottom: 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
}

/* line 46, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
a.list-group-item,
button.list-group-item {
  color: #555;
}

/* line 50, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
a.list-group-item .list-group-item-heading,
button.list-group-item .list-group-item-heading {
  color: #333;
}

/* line 55, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
a.list-group-item:hover, a.list-group-item:focus,
button.list-group-item:hover,
button.list-group-item:focus {
  text-decoration: none;
  color: #555;
  background-color: #f5f5f5;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
button.list-group-item {
  width: 100%;
  text-align: left;
}

/* line 70, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.disabled, .list-group-item.disabled:hover, .list-group-item.disabled:focus {
  background-color: #eeeeee;
  color: #777777;
  cursor: not-allowed;
}

/* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.disabled .list-group-item-heading, .list-group-item.disabled:hover .list-group-item-heading, .list-group-item.disabled:focus .list-group-item-heading {
  color: inherit;
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:hover .list-group-item-text, .list-group-item.disabled:focus .list-group-item-text {
  color: #777777;
}

/* line 87, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.active, .list-group-item.active:hover, .list-group-item.active:focus {
  z-index: 2;
  color: #fff;
  background-color: #337ab7;
  border-color: #337ab7;
}

/* line 96, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.active .list-group-item-heading,
.list-group-item.active .list-group-item-heading > small,
.list-group-item.active .list-group-item-heading > .small, .list-group-item.active:hover .list-group-item-heading,
.list-group-item.active:hover .list-group-item-heading > small,
.list-group-item.active:hover .list-group-item-heading > .small, .list-group-item.active:focus .list-group-item-heading,
.list-group-item.active:focus .list-group-item-heading > small,
.list-group-item.active:focus .list-group-item-heading > .small {
  color: inherit;
}

/* line 101, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item.active .list-group-item-text, .list-group-item.active:hover .list-group-item-text, .list-group-item.active:focus .list-group-item-text {
  color: #c7ddef;
}

/* line 4, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
.list-group-item-success {
  color: #3c763d;
  background-color: #dff0d8;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-success,
button.list-group-item-success {
  color: #3c763d;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-success .list-group-item-heading,
button.list-group-item-success .list-group-item-heading {
  color: inherit;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-success:hover, a.list-group-item-success:focus,
button.list-group-item-success:hover,
button.list-group-item-success:focus {
  color: #3c763d;
  background-color: #d0e9c6;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-success.active, a.list-group-item-success.active:hover, a.list-group-item-success.active:focus,
button.list-group-item-success.active,
button.list-group-item-success.active:hover,
button.list-group-item-success.active:focus {
  color: #fff;
  background-color: #3c763d;
  border-color: #3c763d;
}

/* line 4, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
.list-group-item-info {
  color: #31708f;
  background-color: #d9edf7;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-info,
button.list-group-item-info {
  color: #31708f;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-info .list-group-item-heading,
button.list-group-item-info .list-group-item-heading {
  color: inherit;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-info:hover, a.list-group-item-info:focus,
button.list-group-item-info:hover,
button.list-group-item-info:focus {
  color: #31708f;
  background-color: #c4e3f3;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-info.active, a.list-group-item-info.active:hover, a.list-group-item-info.active:focus,
button.list-group-item-info.active,
button.list-group-item-info.active:hover,
button.list-group-item-info.active:focus {
  color: #fff;
  background-color: #31708f;
  border-color: #31708f;
}

/* line 4, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
.list-group-item-warning {
  color: #8a6d3b;
  background-color: #fcf8e3;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-warning,
button.list-group-item-warning {
  color: #8a6d3b;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-warning .list-group-item-heading,
button.list-group-item-warning .list-group-item-heading {
  color: inherit;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-warning:hover, a.list-group-item-warning:focus,
button.list-group-item-warning:hover,
button.list-group-item-warning:focus {
  color: #8a6d3b;
  background-color: #faf2cc;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-warning.active, a.list-group-item-warning.active:hover, a.list-group-item-warning.active:focus,
button.list-group-item-warning.active,
button.list-group-item-warning.active:hover,
button.list-group-item-warning.active:focus {
  color: #fff;
  background-color: #8a6d3b;
  border-color: #8a6d3b;
}

/* line 4, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
.list-group-item-danger {
  color: #a94442;
  background-color: #f2dede;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-danger,
button.list-group-item-danger {
  color: #a94442;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-danger .list-group-item-heading,
button.list-group-item-danger .list-group-item-heading {
  color: inherit;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-danger:hover, a.list-group-item-danger:focus,
button.list-group-item-danger:hover,
button.list-group-item-danger:focus {
  color: #a94442;
  background-color: #ebcccc;
}

/* line 24, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_list-group.scss */
a.list-group-item-danger.active, a.list-group-item-danger.active:hover, a.list-group-item-danger.active:focus,
button.list-group-item-danger.active,
button.list-group-item-danger.active:hover,
button.list-group-item-danger.active:focus {
  color: #fff;
  background-color: #a94442;
  border-color: #a94442;
}

/* line 123, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item-heading {
  margin-top: 0;
  margin-bottom: 5px;
}

/* line 127, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_list-group.scss */
.list-group-item-text {
  margin-bottom: 0;
  line-height: 1.3;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel {
  margin-bottom: 20px;
  background-color: #fff;
  border: 1px solid transparent;
  border-radius: 4px;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-body {
  padding: 15px;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.panel-body:before, .panel-body:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.panel-body:after {
  clear: both;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-heading {
  padding: 10px 15px;
  border-bottom: 1px solid transparent;
  border-top-right-radius: 3px;
  border-top-left-radius: 3px;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-heading > .dropdown .dropdown-toggle {
  color: inherit;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-title {
  margin-top: 0;
  margin-bottom: 0;
  font-size: 16px;
  color: inherit;
}

/* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-title > a,
.panel-title > small,
.panel-title > .small,
.panel-title > small > a,
.panel-title > .small > a {
  color: inherit;
}

/* line 49, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-footer {
  padding: 10px 15px;
  background-color: #f5f5f5;
  border-top: 1px solid #ddd;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .list-group,
.panel > .panel-collapse > .list-group {
  margin-bottom: 0;
}

/* line 67, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .list-group .list-group-item,
.panel > .panel-collapse > .list-group .list-group-item {
  border-width: 1px 0;
  border-radius: 0;
}

/* line 74, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .list-group:first-child .list-group-item:first-child,
.panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {
  border-top: 0;
  border-top-right-radius: 3px;
  border-top-left-radius: 3px;
}

/* line 82, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .list-group:last-child .list-group-item:last-child,
.panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {
  border-bottom: 0;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}

/* line 89, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}

/* line 96, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-heading + .list-group .list-group-item:first-child {
  border-top-width: 0;
}

/* line 100, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.list-group + .panel-footer {
  border-top-width: 0;
}

/* line 110, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table,
.panel > .table-responsive > .table,
.panel > .panel-collapse > .table {
  margin-bottom: 0;
}

/* line 115, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table caption,
.panel > .table-responsive > .table caption,
.panel > .panel-collapse > .table caption {
  padding-left: 15px;
  padding-right: 15px;
}

/* line 121, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:first-child,
.panel > .table-responsive:first-child > .table:first-child {
  border-top-right-radius: 3px;
  border-top-left-radius: 3px;
}

/* line 127, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:first-child > thead:first-child > tr:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}

/* line 131, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:first-child > thead:first-child > tr:first-child td:first-child,
.panel > .table:first-child > thead:first-child > tr:first-child th:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {
  border-top-left-radius: 3px;
}

/* line 135, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:first-child > thead:first-child > tr:first-child td:last-child,
.panel > .table:first-child > thead:first-child > tr:first-child th:last-child,
.panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,
.panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {
  border-top-right-radius: 3px;
}

/* line 143, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:last-child,
.panel > .table-responsive:last-child > .table:last-child {
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}

/* line 149, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:last-child > tbody:last-child > tr:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}

/* line 153, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,
.panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {
  border-bottom-left-radius: 3px;
}

/* line 157, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,
.panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {
  border-bottom-right-radius: 3px;
}

/* line 164, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .panel-body + .table,
.panel > .panel-body + .table-responsive,
.panel > .table + .panel-body,
.panel > .table-responsive + .panel-body {
  border-top: 1px solid #ddd;
}

/* line 170, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table > tbody:first-child > tr:first-child th,
.panel > .table > tbody:first-child > tr:first-child td {
  border-top: 0;
}

/* line 174, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-bordered,
.panel > .table-responsive > .table-bordered {
  border: 0;
}

/* line 181, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-bordered > thead > tr > th:first-child,
.panel > .table-bordered > thead > tr > td:first-child,
.panel > .table-bordered > tbody > tr > th:first-child,
.panel > .table-bordered > tbody > tr > td:first-child,
.panel > .table-bordered > tfoot > tr > th:first-child,
.panel > .table-bordered > tfoot > tr > td:first-child,
.panel > .table-responsive > .table-bordered > thead > tr > th:first-child,
.panel > .table-responsive > .table-bordered > thead > tr > td:first-child,
.panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,
.panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {
  border-left: 0;
}

/* line 185, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-bordered > thead > tr > th:last-child,
.panel > .table-bordered > thead > tr > td:last-child,
.panel > .table-bordered > tbody > tr > th:last-child,
.panel > .table-bordered > tbody > tr > td:last-child,
.panel > .table-bordered > tfoot > tr > th:last-child,
.panel > .table-bordered > tfoot > tr > td:last-child,
.panel > .table-responsive > .table-bordered > thead > tr > th:last-child,
.panel > .table-responsive > .table-bordered > thead > tr > td:last-child,
.panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,
.panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {
  border-right: 0;
}

/* line 194, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-bordered > thead > tr:first-child > td,
.panel > .table-bordered > thead > tr:first-child > th,
.panel > .table-bordered > tbody > tr:first-child > td,
.panel > .table-bordered > tbody > tr:first-child > th,
.panel > .table-responsive > .table-bordered > thead > tr:first-child > td,
.panel > .table-responsive > .table-bordered > thead > tr:first-child > th,
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {
  border-bottom: 0;
}

/* line 203, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-bordered > tbody > tr:last-child > td,
.panel > .table-bordered > tbody > tr:last-child > th,
.panel > .table-bordered > tfoot > tr:last-child > td,
.panel > .table-bordered > tfoot > tr:last-child > th,
.panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,
.panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,
.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,
.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {
  border-bottom: 0;
}

/* line 210, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel > .table-responsive {
  border: 0;
  margin-bottom: 0;
}

/* line 222, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group {
  margin-bottom: 20px;
}

/* line 226, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel {
  margin-bottom: 0;
  border-radius: 4px;
}

/* line 230, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel + .panel {
  margin-top: 5px;
}

/* line 235, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel-heading {
  border-bottom: 0;
}

/* line 238, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel-heading + .panel-collapse > .panel-body,
.panel-group .panel-heading + .panel-collapse > .list-group {
  border-top: 1px solid #ddd;
}

/* line 244, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel-footer {
  border-top: 0;
}

/* line 246, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-group .panel-footer + .panel-collapse .panel-body {
  border-bottom: 1px solid #ddd;
}

/* line 254, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-default {
  border-color: #ddd;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-default > .panel-heading {
  color: #333333;
  background-color: #f5f5f5;
  border-color: #ddd;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-default > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #ddd;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-default > .panel-heading .badge {
  color: #f5f5f5;
  background-color: #333333;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-default > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #ddd;
}

/* line 257, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-primary {
  border-color: #337ab7;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-primary > .panel-heading {
  color: #fff;
  background-color: #337ab7;
  border-color: #337ab7;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-primary > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #337ab7;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-primary > .panel-heading .badge {
  color: #337ab7;
  background-color: #fff;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-primary > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #337ab7;
}

/* line 260, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-success {
  border-color: #d6e9c6;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-success > .panel-heading {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-success > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #d6e9c6;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-success > .panel-heading .badge {
  color: #dff0d8;
  background-color: #3c763d;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-success > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #d6e9c6;
}

/* line 263, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-info {
  border-color: #bce8f1;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-info > .panel-heading {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-info > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #bce8f1;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-info > .panel-heading .badge {
  color: #d9edf7;
  background-color: #31708f;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-info > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #bce8f1;
}

/* line 266, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-warning {
  border-color: #faebcc;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-warning > .panel-heading {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #faebcc;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-warning > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #faebcc;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-warning > .panel-heading .badge {
  color: #fcf8e3;
  background-color: #8a6d3b;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-warning > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #faebcc;
}

/* line 269, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_panels.scss */
.panel-danger {
  border-color: #ebccd1;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-danger > .panel-heading {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-danger > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #ebccd1;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-danger > .panel-heading .badge {
  color: #f2dede;
  background-color: #a94442;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_panels.scss */
.panel-danger > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #ebccd1;
}

/* line 5, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-embed.scss */
.embed-responsive {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-embed.scss */
.embed-responsive .embed-responsive-item,
.embed-responsive iframe,
.embed-responsive embed,
.embed-responsive object,
.embed-responsive video {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  border: 0;
}

/* line 28, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-embed.scss */
.embed-responsive-16by9 {
  padding-bottom: 56.25%;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-embed.scss */
.embed-responsive-4by3 {
  padding-bottom: 75%;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_wells.scss */
.well {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 20px;
  background-color: #f5f5f5;
  border: 1px solid #e3e3e3;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_wells.scss */
.well blockquote {
  border-color: #ddd;
  border-color: rgba(0, 0, 0, 0.15);
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_wells.scss */
.well-lg {
  padding: 24px;
  border-radius: 6px;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_wells.scss */
.well-sm {
  padding: 9px;
  border-radius: 3px;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_close.scss */
.close {
  float: right;
  font-size: 21px;
  font-weight: bold;
  line-height: 1;
  color: #000;
  text-shadow: 0 1px 0 #fff;
  opacity: 0.2;
  filter: alpha(opacity=20);
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_close.scss */
.close:hover, .close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
  opacity: 0.5;
  filter: alpha(opacity=50);
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_close.scss */
button.close {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-open {
  overflow: hidden;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal {
  display: none;
  overflow: hidden;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  -webkit-overflow-scrolling: touch;
  outline: 0;
}

/* line 32, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal.fade .modal-dialog {
  -webkit-transform: translate(0, -25%);
  -ms-transform: translate(0, -25%);
  -o-transform: translate(0, -25%);
  transform: translate(0, -25%);
  -webkit-transition: -webkit-transform 0.3s ease-out;
  -moz-transition: -moz-transform 0.3s ease-out;
  -o-transition: -o-transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal.in .modal-dialog {
  -webkit-transform: translate(0, 0);
  -ms-transform: translate(0, 0);
  -o-transform: translate(0, 0);
  transform: translate(0, 0);
}

/* line 38, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}

/* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px;
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-content {
  position: relative;
  background-color: #fff;
  border: 1px solid #999;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  background-clip: padding-box;
  outline: 0;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000;
}

/* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-backdrop.fade {
  opacity: 0;
  filter: alpha(opacity=0);
}

/* line 74, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-backdrop.in {
  opacity: 0.5;
  filter: alpha(opacity=50);
}

/* line 79, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-header {
  padding: 15px;
  border-bottom: 1px solid #e5e5e5;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.modal-header:before, .modal-header:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.modal-header:after {
  clear: both;
}

/* line 85, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-header .close {
  margin-top: -2px;
}

/* line 90, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-title {
  margin: 0;
  line-height: 1.42857;
}

/* line 97, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-body {
  position: relative;
  padding: 15px;
}

/* line 103, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-footer {
  padding: 15px;
  text-align: right;
  border-top: 1px solid #e5e5e5;
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.modal-footer:before, .modal-footer:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.modal-footer:after {
  clear: both;
}

/* line 110, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-footer .btn + .btn {
  margin-left: 5px;
  margin-bottom: 0;
}

/* line 115, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-footer .btn-group .btn + .btn {
  margin-left: -1px;
}

/* line 119, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-footer .btn-block + .btn-block {
  margin-left: 0;
}

/* line 125, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

@media (min-width: 768px) {
  /* line 136, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
  .modal-dialog {
    width: 600px;
    margin: 30px auto;
  }
  /* line 140, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
  .modal-content {
    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  }
  /* line 145, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
  .modal-sm {
    width: 300px;
  }
}

@media (min-width: 992px) {
  /* line 149, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_modals.scss */
  .modal-lg {
    width: 900px;
  }
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip {
  position: absolute;
  z-index: 1070;
  display: block;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: normal;
  font-weight: normal;
  letter-spacing: normal;
  line-break: auto;
  line-height: 1.42857;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
  font-size: 12px;
  opacity: 0;
  filter: alpha(opacity=0);
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.in {
  opacity: 0.9;
  filter: alpha(opacity=90);
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.top {
  margin-top: -3px;
  padding: 5px 0;
}

/* line 20, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.right {
  margin-left: 3px;
  padding: 0 5px;
}

/* line 21, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.bottom {
  margin-top: 3px;
  padding: 5px 0;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.left {
  margin-left: -3px;
  padding: 0 5px;
}

/* line 26, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip-inner {
  max-width: 200px;
  padding: 3px 8px;
  color: #fff;
  text-align: center;
  background-color: #000;
  border-radius: 4px;
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.top .tooltip-arrow {
  bottom: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}

/* line 52, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.top-left .tooltip-arrow {
  bottom: 0;
  right: 5px;
  margin-bottom: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.top-right .tooltip-arrow {
  bottom: 0;
  left: 5px;
  margin-bottom: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}

/* line 66, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.right .tooltip-arrow {
  top: 50%;
  left: 0;
  margin-top: -5px;
  border-width: 5px 5px 5px 0;
  border-right-color: #000;
}

/* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.left .tooltip-arrow {
  top: 50%;
  right: 0;
  margin-top: -5px;
  border-width: 5px 0 5px 5px;
  border-left-color: #000;
}

/* line 80, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.bottom .tooltip-arrow {
  top: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}

/* line 87, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.bottom-left .tooltip-arrow {
  top: 0;
  right: 5px;
  margin-top: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}

/* line 94, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_tooltip.scss */
.tooltip.bottom-right .tooltip-arrow {
  top: 0;
  left: 5px;
  margin-top: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}

/* line 6, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1060;
  display: none;
  max-width: 276px;
  padding: 1px;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: normal;
  font-weight: normal;
  letter-spacing: normal;
  line-break: auto;
  line-height: 1.42857;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
  font-size: 14px;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.top {
  margin-top: -10px;
}

/* line 28, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.right {
  margin-left: 10px;
}

/* line 29, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.bottom {
  margin-top: 10px;
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.left {
  margin-left: -10px;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover-title {
  margin: 0;
  padding: 8px 14px;
  font-size: 14px;
  background-color: #f7f7f7;
  border-bottom: 1px solid #ebebeb;
  border-radius: 5px 5px 0 0;
}

/* line 42, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover-content {
  padding: 9px 14px;
}

/* line 51, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover > .arrow, .popover > .arrow:after {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}

/* line 61, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover > .arrow {
  border-width: 11px;
}

/* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover > .arrow:after {
  border-width: 10px;
  content: "";
}

/* line 70, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.top > .arrow {
  left: 50%;
  margin-left: -11px;
  border-bottom-width: 0;
  border-top-color: #999999;
  border-top-color: rgba(0, 0, 0, 0.25);
  bottom: -11px;
}

/* line 77, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.top > .arrow:after {
  content: " ";
  bottom: 1px;
  margin-left: -10px;
  border-bottom-width: 0;
  border-top-color: #fff;
}

/* line 85, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.right > .arrow {
  top: 50%;
  left: -11px;
  margin-top: -11px;
  border-left-width: 0;
  border-right-color: #999999;
  border-right-color: rgba(0, 0, 0, 0.25);
}

/* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.right > .arrow:after {
  content: " ";
  left: 1px;
  bottom: -10px;
  border-left-width: 0;
  border-right-color: #fff;
}

/* line 100, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.bottom > .arrow {
  left: 50%;
  margin-left: -11px;
  border-top-width: 0;
  border-bottom-color: #999999;
  border-bottom-color: rgba(0, 0, 0, 0.25);
  top: -11px;
}

/* line 107, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.bottom > .arrow:after {
  content: " ";
  top: 1px;
  margin-left: -10px;
  border-top-width: 0;
  border-bottom-color: #fff;
}

/* line 116, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.left > .arrow {
  top: 50%;
  right: -11px;
  margin-top: -11px;
  border-right-width: 0;
  border-left-color: #999999;
  border-left-color: rgba(0, 0, 0, 0.25);
}

/* line 123, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_popovers.scss */
.popover.left > .arrow:after {
  content: " ";
  right: 1px;
  border-right-width: 0;
  border-left-color: #fff;
  bottom: -10px;
}

/* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel {
  position: relative;
}

/* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner {
  position: relative;
  overflow: hidden;
  width: 100%;
}

/* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .item {
  display: none;
  position: relative;
  -webkit-transition: 0.6s ease-in-out left;
  -o-transition: 0.6s ease-in-out left;
  transition: 0.6s ease-in-out left;
}

/* line 22, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .item > img,
.carousel-inner > .item > a > img {
  display: block;
  max-width: 100%;
  height: auto;
  line-height: 1;
}

@media all and (transform-3d), (-webkit-transform-3d) {
  /* line 16, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-inner > .item {
    -webkit-transition: -webkit-transform 0.6s ease-in-out;
    -moz-transition: -moz-transform 0.6s ease-in-out;
    -o-transition: -o-transform 0.6s ease-in-out;
    transition: transform 0.6s ease-in-out;
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-perspective: 1000px;
    -moz-perspective: 1000px;
    perspective: 1000px;
  }
  /* line 34, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-inner > .item.next, .carousel-inner > .item.active.right {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
    left: 0;
  }
  /* line 39, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-inner > .item.prev, .carousel-inner > .item.active.left {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
    left: 0;
  }
  /* line 44, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-inner > .item.next.left, .carousel-inner > .item.prev.right, .carousel-inner > .item.active {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    left: 0;
  }
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .active,
.carousel-inner > .next,
.carousel-inner > .prev {
  display: block;
}

/* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .active {
  left: 0;
}

/* line 63, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .next,
.carousel-inner > .prev {
  position: absolute;
  top: 0;
  width: 100%;
}

/* line 70, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .next {
  left: 100%;
}

/* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .prev {
  left: -100%;
}

/* line 76, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .next.left,
.carousel-inner > .prev.right {
  left: 0;
}

/* line 81, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .active.left {
  left: -100%;
}

/* line 84, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-inner > .active.right {
  left: 100%;
}

/* line 93, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 15%;
  opacity: 0.5;
  filter: alpha(opacity=50);
  font-size: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);
  background-color: transparent;
}

/* line 109, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control.left {
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);
  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);
}

/* line 112, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control.right {
  left: auto;
  right: 0;
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);
  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);
}

/* line 119, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control:hover, .carousel-control:focus {
  outline: 0;
  color: #fff;
  text-decoration: none;
  opacity: 0.9;
  filter: alpha(opacity=90);
}

/* line 128, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-prev,
.carousel-control .icon-next,
.carousel-control .glyphicon-chevron-left,
.carousel-control .glyphicon-chevron-right {
  position: absolute;
  top: 50%;
  margin-top: -10px;
  z-index: 5;
  display: inline-block;
}

/* line 138, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-prev,
.carousel-control .glyphicon-chevron-left {
  left: 50%;
  margin-left: -10px;
}

/* line 143, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-next,
.carousel-control .glyphicon-chevron-right {
  right: 50%;
  margin-right: -10px;
}

/* line 148, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-prev,
.carousel-control .icon-next {
  width: 20px;
  height: 20px;
  line-height: 1;
  font-family: serif;
}

/* line 158, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-prev:before {
  content: '\2039';
}

/* line 163, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-control .icon-next:before {
  content: '\203a';
}

/* line 174, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-indicators {
  position: absolute;
  bottom: 10px;
  left: 50%;
  z-index: 15;
  width: 60%;
  margin-left: -30%;
  padding-left: 0;
  list-style: none;
  text-align: center;
}

/* line 185, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-indicators li {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 1px;
  text-indent: -999px;
  border: 1px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  background-color: #000 \9;
  background-color: transparent;
}

/* line 207, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-indicators .active {
  margin: 0;
  width: 12px;
  height: 12px;
  background-color: #fff;
}

/* line 218, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-caption {
  position: absolute;
  left: 15%;
  right: 15%;
  bottom: 20px;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);
}

/* line 229, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
.carousel-caption .btn {
  text-shadow: none;
}

@media screen and (min-width: 768px) {
  /* line 240, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-prev,
  .carousel-control .icon-next {
    width: 30px;
    height: 30px;
    margin-top: -10px;
    font-size: 30px;
  }
  /* line 249, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .icon-prev {
    margin-left: -10px;
  }
  /* line 253, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-next {
    margin-right: -10px;
  }
  /* line 260, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-caption {
    left: 20%;
    right: 20%;
    padding-bottom: 30px;
  }
  /* line 267, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_carousel.scss */
  .carousel-indicators {
    bottom: 20px;
  }
}

/* line 14, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}

/* line 19, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_clearfix.scss */
.clearfix:after {
  clear: both;
}

/* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/* line 15, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.pull-right {
  float: right !important;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.pull-left {
  float: left !important;
}

/* line 27, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.hide {
  display: none !important;
}

/* line 30, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.show {
  display: block !important;
}

/* line 33, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.invisible {
  visibility: hidden;
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

/* line 45, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.hidden {
  display: none !important;
}

/* line 53, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_utilities.scss */
.affix {
  position: fixed;
}

@-ms-viewport {
  width: device-width;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
.visible-xs {
  display: none !important;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
.visible-sm {
  display: none !important;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
.visible-md {
  display: none !important;
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
.visible-lg {
  display: none !important;
}

/* line 36, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}

@media (max-width: 767px) {
  /* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .visible-xs {
    display: block !important;
  }
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  table.visible-xs {
    display: table !important;
  }
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  tr.visible-xs {
    display: table-row !important;
  }
  /* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  th.visible-xs,
  td.visible-xs {
    display: table-cell !important;
  }
}

@media (max-width: 767px) {
  /* line 54, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-xs-block {
    display: block !important;
  }
}

@media (max-width: 767px) {
  /* line 59, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-xs-inline {
    display: inline !important;
  }
}

@media (max-width: 767px) {
  /* line 64, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-xs-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 768px) and (max-width: 991px) {
  /* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .visible-sm {
    display: block !important;
  }
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  table.visible-sm {
    display: table !important;
  }
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  tr.visible-sm {
    display: table-row !important;
  }
  /* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important;
  }
}

@media (min-width: 768px) and (max-width: 991px) {
  /* line 73, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-sm-block {
    display: block !important;
  }
}

@media (min-width: 768px) and (max-width: 991px) {
  /* line 78, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-sm-inline {
    display: inline !important;
  }
}

@media (min-width: 768px) and (max-width: 991px) {
  /* line 83, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-sm-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 992px) and (max-width: 1199px) {
  /* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .visible-md {
    display: block !important;
  }
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  table.visible-md {
    display: table !important;
  }
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  tr.visible-md {
    display: table-row !important;
  }
  /* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  th.visible-md,
  td.visible-md {
    display: table-cell !important;
  }
}

@media (min-width: 992px) and (max-width: 1199px) {
  /* line 92, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-md-block {
    display: block !important;
  }
}

@media (min-width: 992px) and (max-width: 1199px) {
  /* line 97, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-md-inline {
    display: inline !important;
  }
}

@media (min-width: 992px) and (max-width: 1199px) {
  /* line 102, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-md-inline-block {
    display: inline-block !important;
  }
}

@media (min-width: 1200px) {
  /* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .visible-lg {
    display: block !important;
  }
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  table.visible-lg {
    display: table !important;
  }
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  tr.visible-lg {
    display: table-row !important;
  }
  /* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  th.visible-lg,
  td.visible-lg {
    display: table-cell !important;
  }
}

@media (min-width: 1200px) {
  /* line 111, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-lg-block {
    display: block !important;
  }
}

@media (min-width: 1200px) {
  /* line 116, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-lg-inline {
    display: inline !important;
  }
}

@media (min-width: 1200px) {
  /* line 121, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-lg-inline-block {
    display: inline-block !important;
  }
}

@media (max-width: 767px) {
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .hidden-xs {
    display: none !important;
  }
}

@media (min-width: 768px) and (max-width: 991px) {
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .hidden-sm {
    display: none !important;
  }
}

@media (min-width: 992px) and (max-width: 1199px) {
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .hidden-md {
    display: none !important;
  }
}

@media (min-width: 1200px) {
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .hidden-lg {
    display: none !important;
  }
}

/* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
.visible-print {
  display: none !important;
}

@media print {
  /* line 7, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .visible-print {
    display: block !important;
  }
  /* line 10, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  table.visible-print {
    display: table !important;
  }
  /* line 11, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  tr.visible-print {
    display: table-row !important;
  }
  /* line 12, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  th.visible-print,
  td.visible-print {
    display: table-cell !important;
  }
}

/* line 155, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
.visible-print-block {
  display: none !important;
}

@media print {
  /* line 155, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-print-block {
    display: block !important;
  }
}

/* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
.visible-print-inline {
  display: none !important;
}

@media print {
  /* line 162, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-print-inline {
    display: inline !important;
  }
}

/* line 169, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
.visible-print-inline-block {
  display: none !important;
}

@media print {
  /* line 169, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/_responsive-utilities.scss */
  .visible-print-inline-block {
    display: inline-block !important;
  }
}

@media print {
  /* line 18, vendor/bundle/ruby/2.4.0/gems/bootstrap-sass-3.3.7/assets/stylesheets/bootstrap/mixins/_responsive-visibility.scss */
  .hidden-print {
    display: none !important;
  }
}

@media screen and (max-width: 480px) and (min-width: 200px) {
  @font-face {
    font-family: 'zousan';
    src: url(/assets/zousan-d1dc10dbc00924777828888a353293eddbcaa2a538257b976e2aa33f68fe9602.otf) format("truetype");
  }
  /* line 10, app/assets/stylesheets/welcome_sp.scss */
  .zousan {
    font-family: 'zousan';
  }
  /* line 13, app/assets/stylesheets/welcome_sp.scss */
  .YuGothic {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
  }
  /* line 16, app/assets/stylesheets/welcome_sp.scss */
  body {
    background: #fef7e5;
  }
  /* line 21, app/assets/stylesheets/welcome_sp.scss */
  .top-image {
    margin-left: auto;
    margin-right: auto;
  }
  /* line 26, app/assets/stylesheets/welcome_sp.scss */
  .top-header {
    display: none;
  }
  /* line 30, app/assets/stylesheets/welcome_sp.scss */
  .header_image {
    height: 30vh;
  }
  /* line 32, app/assets/stylesheets/welcome_sp.scss */
  .header_image .center_logo {
    padding-top: 5vh;
  }
  /* line 34, app/assets/stylesheets/welcome_sp.scss */
  .header_image .center_logo h1 {
    font-size: 4em;
  }
  /* line 37, app/assets/stylesheets/welcome_sp.scss */
  .header_image .center_logo h2 {
    font-size: 3em;
  }
  /* line 40, app/assets/stylesheets/welcome_sp.scss */
  .header_image .center_logo .zousan {
    padding: 0;
    margin: 0;
    color: #fdeec2;
    text-shadow: 4px 4px 0px #E85C40;
    margin-bottom: 2 vh;
  }
  /* line 50, app/assets/stylesheets/welcome_sp.scss */
  .attributes {
    height: 5vh;
    margin: 0;
  }
  /* line 53, app/assets/stylesheets/welcome_sp.scss */
  .attributes ul {
    padding: 0;
    width: 100%;
    margin-top: 3%;
    table-layout: fixed;
    text-align: center;
  }
  /* line 59, app/assets/stylesheets/welcome_sp.scss */
  .attributes ul li {
    display: inline-block;
    text-align: center;
    color: #e85c40;
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    list-style: none;
    font-size: 1.5em;
    font-weight: bold;
    margin-left: 2vw;
  }
  /* line 72, app/assets/stylesheets/welcome_sp.scss */
  .article-search {
    margin-top: 5vh;
    width: 80vw;
    margin-left: auto;
    margin-right: auto;
  }
  /* line 77, app/assets/stylesheets/welcome_sp.scss */
  .article-search form {
    border: solid 7px #e85c40;
  }
  /* line 79, app/assets/stylesheets/welcome_sp.scss */
  .article-search form :placeholder-shown {
    color: grey;
  }
  /* line 80, app/assets/stylesheets/welcome_sp.scss */
  .article-search form ::-webkit-input-placeholder {
    color: grey;
  }
  /* line 81, app/assets/stylesheets/welcome_sp.scss */
  .article-search form :-moz-placeholder {
    color: grey;
    opacity: 1;
  }
  /* line 82, app/assets/stylesheets/welcome_sp.scss */
  .article-search form ::-moz-placeholder {
    color: grey;
    opacity: 1;
  }
  /* line 83, app/assets/stylesheets/welcome_sp.scss */
  .article-search form :-ms-input-placeholder {
    color: grey;
  }
  /* line 87, app/assets/stylesheets/welcome_sp.scss */
  .article-list {
    margin-top: 5vh;
    width: 90vw;
    margin-left: auto;
    margin-right: auto;
  }
  /* line 88, app/assets/stylesheets/welcome_sp.scss */
  .article-list h1 {
    color: #e85c40;
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    font-size: 4em;
    font-weight: bold;
  }
  /* line 98, app/assets/stylesheets/welcome_sp.scss */
  .article-list .article-card {
    margin-left: 2vw;
    margin-right: 2vw;
    margin-bottom: 5vh;
  }
  /* line 104, app/assets/stylesheets/welcome_sp.scss */
  .article-list .article-card .article-info ul li {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    display: inline-block;
    list-style: none;
  }
  /* line 109, app/assets/stylesheets/welcome_sp.scss */
  .article-list .article-card .article-info ul .release-date {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    display: inline-block;
  }
  /* line 115, app/assets/stylesheets/welcome_sp.scss */
  .article-list .article-card .article-info .article-title h2 {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    font-size: 2em;
    font-weight: bold;
  }
}

@media screen and (min-width: 480px) {
  @font-face {
    font-family: 'zousan';
    src: url(/assets/zousan-d1dc10dbc00924777828888a353293eddbcaa2a538257b976e2aa33f68fe9602.otf) format("truetype");
  }
  /* line 10, app/assets/stylesheets/welcome.scss */
  .zousan {
    font-family: 'zousan';
  }
  /* line 13, app/assets/stylesheets/welcome.scss */
  .YuGothic {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
  }
  /* line 16, app/assets/stylesheets/welcome.scss */
  body {
    background: #fef7e5;
  }
  /* line 21, app/assets/stylesheets/welcome.scss */
  .top-image {
    margin-left: auto;
    margin-right: auto;
  }
  /* line 26, app/assets/stylesheets/welcome.scss */
  .top-header {
    height: 10vh;
    margin-bottom: 0;
    background: #E85C40;
  }
  /* line 30, app/assets/stylesheets/welcome.scss */
  .top-header .navbar-brand {
    padding-left: 2%;
  }
  /* line 32, app/assets/stylesheets/welcome.scss */
  .top-header .navbar-brand p {
    color: white;
  }
  /* line 36, app/assets/stylesheets/welcome.scss */
  .top-header ul {
    margin: 0;
    padding: 0;
    padding-top: 3vh;
    padding-right: 2%;
  }
  /* line 41, app/assets/stylesheets/welcome.scss */
  .top-header ul li {
    color: white;
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    list-style: none;
    font-size: 1.5em;
    font-weight: bold;
    margin-left: 2vw;
  }
  /* line 52, app/assets/stylesheets/welcome.scss */
  .header_image {
    height: 50vh;
    background-image: url("toppicture_mini.jpg");
    background-repeat: no-repeat;
    background-size: cover;
  }
  /* line 57, app/assets/stylesheets/welcome.scss */
  .header_image .center_logo {
    padding-top: 15vh;
  }
  /* line 59, app/assets/stylesheets/welcome.scss */
  .header_image .center_logo h1 {
    font-size: 6em;
  }
  /* line 62, app/assets/stylesheets/welcome.scss */
  .header_image .center_logo h2 {
    font-size: 4em;
  }
  /* line 65, app/assets/stylesheets/welcome.scss */
  .header_image .center_logo .zousan {
    padding: 0;
    margin: 0;
    color: #fdeec2;
    text-shadow: 4px 4px 0px #E85C40;
    margin-bottom: 2 vh;
  }
  /* line 75, app/assets/stylesheets/welcome.scss */
  .attributes {
    height: 15vh;
    border-top: double 15px #e85c40;
    border-bottom: double 15px #e85c40;
    background: white;
    margin: 0;
  }
  /* line 81, app/assets/stylesheets/welcome.scss */
  .attributes ul {
    padding: 0;
    width: 100%;
    margin-top: 3%;
    table-layout: fixed;
    text-align: center;
  }
  /* line 87, app/assets/stylesheets/welcome.scss */
  .attributes ul li {
    display: inline-block;
    text-align: center;
    color: #e85c40;
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    list-style: none;
    font-size: 2em;
    font-weight: bold;
    margin-left: 2vw;
  }
  /* line 100, app/assets/stylesheets/welcome.scss */
  .article-search {
    margin-top: 5vh;
    width: 40vw;
    margin-left: auto;
    margin-right: auto;
  }
  /* line 105, app/assets/stylesheets/welcome.scss */
  .article-search form {
    border: solid 7px #e85c40;
  }
  /* line 107, app/assets/stylesheets/welcome.scss */
  .article-search form :placeholder-shown {
    color: grey;
  }
  /* line 108, app/assets/stylesheets/welcome.scss */
  .article-search form ::-webkit-input-placeholder {
    color: grey;
  }
  /* line 109, app/assets/stylesheets/welcome.scss */
  .article-search form :-moz-placeholder {
    color: grey;
    opacity: 1;
  }
  /* line 110, app/assets/stylesheets/welcome.scss */
  .article-search form ::-moz-placeholder {
    color: grey;
    opacity: 1;
  }
  /* line 111, app/assets/stylesheets/welcome.scss */
  .article-search form :-ms-input-placeholder {
    color: grey;
  }
  /* line 115, app/assets/stylesheets/welcome.scss */
  .article-list {
    margin-top: 20vh;
    width: 90vw;
    margin-left: auto;
    margin-right: auto;
  }
  /* line 116, app/assets/stylesheets/welcome.scss */
  .article-list h1 {
    color: #e85c40;
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    font-size: 8em;
    font-weight: bold;
  }
  /* line 126, app/assets/stylesheets/welcome.scss */
  .article-list .article-card {
    margin-left: 2vw;
    margin-right: 2vw;
    margin-bottom: 5vh;
  }
  /* line 132, app/assets/stylesheets/welcome.scss */
  .article-list .article-card .article-info ul li {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    display: inline-block;
    list-style: none;
  }
  /* line 137, app/assets/stylesheets/welcome.scss */
  .article-list .article-card .article-info ul .release-date {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    display: inline-block;
  }
  /* line 143, app/assets/stylesheets/welcome.scss */
  .article-list .article-card .article-info .article-title h2 {
    font-family: "游ゴシック体", "Yu Gothic", YuGothic, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "メイリオ", "Meiryo", "sans-serif";
    font-size: 2em;
    font-weight: bold;
  }
}

/*# sourceMappingURL=data:application/json;base64, */